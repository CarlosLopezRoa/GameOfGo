(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     78976,       1683]
NotebookOptionsPosition[     77405,       1623]
NotebookOutlinePosition[     77757,       1639]
CellTagsIndexPosition[     77714,       1636]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.66550633122519*^9, 3.665506338800968*^9}}],

Cell[BoxData["\<\"/Users/poincare/Dropbox/Documentos/DMKM/02 \
Lyon/CMS/PR\"\>"], "Output",
 CellChangeTimes->{3.665506339564541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\<exp2.xlsx\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"Length", "[", "exp", "]"}]}]], "Input",
 CellChangeTimes->{{3.665506341586244*^9, 3.665506366879055*^9}, 
   3.665507102937612*^9, {3.665509480107182*^9, 3.6655094823229017`*^9}}],

Cell[BoxData["1089"], "Output",
 CellChangeTimes->{3.665509483176444*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tally", "[", "exp", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{
      RowBox[{"Tally", "[", "exp", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "1089", " ", "Tries", " ", "in", " ", "a", " ", "9", "x9", " ", "size"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.665506368042225*^9, 3.665506378421424*^9}, {
  3.665506690216901*^9, 3.66550672061477*^9}, {3.665506752773644*^9, 
  3.665506802041403*^9}, {3.665507285037897*^9, 3.665507308530128*^9}, {
  3.6655087804114122`*^9, 3.665508803867815*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.48597994530537825`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6789999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 541.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.133729962573256`, 
           126.566885294027}, {-101.87964913332087`, 95.26352218621435}}],
         StatusArea[#, 541]& ,
         TagBoxNote->"541"],
        StyleBox["541", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[541, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 547.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{135.760401361178, 
           236.19355669263172`}, {-104.06053458233603`, 95.26352218621435}}],
         StatusArea[#, 547]& ,
         TagBoxNote->"547"],
        StyleBox["547", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[547, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{245.38707275978277`, 345.82022809123646`}, {
           94.40004127804515, 95.26352218621435}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.544211485870556, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 0.}]}], 
         LineBox[{{3.455788514129444, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
            0.}]}], {{}, {}, {}, {
           LineBox[{{1.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.455788514129444, 
              0.}]}], LineBox[{{1.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.544211485870556, 
              0.}]}], LineBox[{{2.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.455788514129444, 
              0.}]}], LineBox[{{2.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.544211485870556, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks  wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites  wins\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Tie  wins\"\>", Offset[{0., -2.}, {3., 0.}], {0, 1}, 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.48597994530537825`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks  wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites  wins\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Tie  wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.665506371033051*^9, 3.665506378965507*^9}, 
   3.66550641375465*^9, {3.6655065729453783`*^9, 3.665506601929317*^9}, {
   3.6655066860747137`*^9, 3.665506720917572*^9}, {3.665506753243643*^9, 
   3.665506802526675*^9}, 3.665506845029008*^9, 3.665506931716157*^9, {
   3.665506964874015*^9, 3.665506979082341*^9}, 3.665507104204183*^9, 
   3.66550717646212*^9, {3.6655072815327873`*^9, 3.6655073088944597`*^9}, 
   3.665507365889553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp4", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\<exp3.xlsx\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"Length", "[", "exp4", "]"}]}]], "Input",
 CellChangeTimes->{{3.6655090042564087`*^9, 3.665509006485896*^9}, {
  3.665509488577097*^9, 3.6655094909203987`*^9}, {3.665509686790695*^9, 
  3.665509697002138*^9}}],

Cell[BoxData["570"], "Output",
 CellChangeTimes->{{3.665509491423113*^9, 3.6655095083869057`*^9}, {
   3.665509697597197*^9, 3.6655097103122787`*^9}, 3.665510171622854*^9, 
   3.665518431361672*^9, 3.6655188104948893`*^9, 3.6655619848034077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tally", "[", "exp4", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{
      RowBox[{"Tally", "[", "exp4", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"19", "x19"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.665509013903846*^9, 3.665509015645623*^9}, {
  3.665509633484962*^9, 3.665509638851931*^9}, {3.66550969202107*^9, 
  3.665509694118886*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5064116575591986, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5446265938069217, 0.}, {1.4553734061930783`, 265.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.133729962573256`, 
           178.77219427556813`}, {-77.98524844875564, 95.26352218621432}}],
         StatusArea[#, 265]& ,
         TagBoxNote->"265"],
        StyleBox["265", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[265, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5446265938069217`, 0.}, {2.455373406193078, 305.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{193.18176377824162`, 
           345.82022809123646`}, {-104.060534582336, 95.26352218621432}}],
         StatusArea[#, 305]& ,
         TagBoxNote->"305"],
        StyleBox["305", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[305, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.5064116575591986, 0.}, {2.4943526411657557`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5446265938069217, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5446265938069217, 0.}]}],
          LineBox[{{2.455373406193078, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.455373406193078, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4553734061930783`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4553734061930783`, 
              0.}]}], LineBox[{{1.5446265938069217`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5446265938069217`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks  wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites  wins\"\>", 
           Offset[{0., -2.}, {1.9999999999999998`, 0.}], {0, 1}, Automatic, {
           1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5064116575591986, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks  wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites  wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.6655090174424257`*^9, 3.665509187874049*^9, 3.6655093663367357`*^9, 
   3.6655094710037403`*^9, 3.6655095092150908`*^9, {3.665509699061728*^9, 
   3.665509711682056*^9}, 3.6655101730778847`*^9, 3.665518432200453*^9, 
   3.665518811401883*^9, 3.6655619858323507`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hist1", "=", 
   RowBox[{"Import", "[", "\"\<hist3.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665562173049046*^9, 3.665562195422871*^9}, 
   3.665562300463366*^9, {3.665564484455473*^9, 3.665564484628093*^9}, {
   3.665567331413556*^9, 3.665567331526819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hist1", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"hist1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"hist1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.665562301674921*^9, 3.665562323977044*^9}, {
  3.6655626016376266`*^9, 3.665562618973947*^9}, {3.665564485989583*^9, 
  3.665564486924382*^9}, {3.665564890956016*^9, 3.665564895255678*^9}}],

Cell[BoxData["2886.515`"], "Output",
 CellChangeTimes->{{3.6655626146591187`*^9, 3.665562619658104*^9}, 
   3.6655631059369917`*^9, 3.665563500698254*^9, 3.66556358815171*^9, 
   3.665564487266374*^9, 3.665564749582944*^9, 3.665564895543001*^9, 
   3.665565292180602*^9, 3.665565736853921*^9, 3.665566697293372*^9, 
   3.6655667895102777`*^9, 3.6655673335472517`*^9, 3.66556903560569*^9, 
   3.665569399039043*^9, 3.665569532658485*^9, 3.665570218586836*^9, 
   3.665572200081949*^9, 3.665574601447055*^9, 3.665578475880809*^9, 
   3.665588409351223*^9}],

Cell[BoxData["2941.151`"], "Output",
 CellChangeTimes->{{3.6655626146591187`*^9, 3.665562619658104*^9}, 
   3.6655631059369917`*^9, 3.665563500698254*^9, 3.66556358815171*^9, 
   3.665564487266374*^9, 3.665564749582944*^9, 3.665564895543001*^9, 
   3.665565292180602*^9, 3.665565736853921*^9, 3.665566697293372*^9, 
   3.6655667895102777`*^9, 3.6655673335472517`*^9, 3.66556903560569*^9, 
   3.665569399039043*^9, 3.665569532658485*^9, 3.665570218586836*^9, 
   3.665572200081949*^9, 3.665574601447055*^9, 3.665578475880809*^9, 
   3.6655884093561707`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StudentTCI", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"StandardDeviation", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", "1"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665562465208153*^9, 3.665562528670368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1066.819357551461`", ",", "4617.209419426956`"}], "}"}]], "Output",\

 CellChangeTimes->{3.665562500712595*^9, 3.665562533751828*^9, 
  3.665562603711054*^9, 3.665563111976756*^9, 3.6655635032821207`*^9, 
  3.665563589944406*^9, 3.6655644895056467`*^9, 3.665564751777548*^9, 
  3.665566699400837*^9, 3.665567335573896*^9, 3.665569402723081*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocationTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665562655173931*^9, 3.665562661179215*^9}, {
  3.665562692013898*^9, 3.665562701698183*^9}, {3.665563148213397*^9, 
  3.665563191299259*^9}, {3.6655633645039997`*^9, 3.665563365334529*^9}, {
  3.665563522081296*^9, 3.665563526857325*^9}, {3.665565304428955*^9, 
  3.6655653225225554`*^9}, {3.6655654106352377`*^9, 3.665565430774765*^9}, {
  3.6655667291850224`*^9, 3.665566747942419*^9}, {3.665569517621872*^9, 
  3.665569521700224*^9}}],

Cell[BoxData["0.023540625868592395`"], "Output",
 CellChangeTimes->{
  3.665562661550383*^9, 3.665562702196252*^9, 3.665563117853347*^9, {
   3.665563150071553*^9, 3.665563191721943*^9}, 3.6655633659019117`*^9, {
   3.665563505799375*^9, 3.6655635276770687`*^9}, 3.665563590884326*^9, 
   3.665564490997011*^9, 3.665564752836919*^9, 3.665564868470006*^9, {
   3.665565296718285*^9, 3.665565322916039*^9}, {3.665565413844654*^9, 
   3.665565431376247*^9}, 3.665565739939114*^9, {3.665566702661648*^9, 
   3.665566748812598*^9}, 3.6655667932389593`*^9, 3.665567336655262*^9, 
   3.665569038629842*^9, 3.665569404863027*^9, {3.665569518710144*^9, 
   3.665569535996748*^9}, 3.66556959923076*^9, 3.665574605449296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Black Score\>\"", ",", "\"\<White Score\>\""}], "}"}], 
      ",", "Below"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6655628752866163`*^9, 3.6655628798427258`*^9}, {
  3.665563211434945*^9, 3.6655632224809103`*^9}, {3.665563383558653*^9, 
  3.665563413725334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxde2VU1U+0Nh3S3d0ISPf5zSZEBUwQUZAQRFFUwMJCJKUbSeluOMQ5SINI
Sv8lRNqipRV8fde6636482XWXs/semb2rD0fRuTavQvXyUhISKzISUj+/9xK
dObVJXoDyf+M/ysruy/HKG97g5yd2DsvnQwsQ8aNSUbZB0RyK+cTSbMwlpnN
QKG7PuD+U+aGw1I25hXvQcFZ4ANRyTQXBA5zsdWzfzzpF30g1v+mPLVWAWZL
7bVHJuoLD2xohLxTi7C+BvIHe1d9gbHsefSSSimGexSwsprgC7zK136b/ynD
iuXpnBdHfEFvSi5XxqMC418Im5tk8QOzkv2wD4x4LDiZ1WbotB80lood2DZX
YftmcZ86A/2AvO9ezoXIGuwWHa9ZU7sfsE04//39koCNtaT0VpP6w63pydWK
sDrs5FORk8U4f7h6hs75a0M9VquU3ZL5xB+0KgrktmmaMKnv0rjEKn/4lKZb
EG/YjMWlFdVErPvDJUu98CPRLRilpaJygHwAmMSW2P/dbMUeMuGLXjgHAMfx
HQvV2+3Y/HsNqQfZATAutuRjs/0eM/OsS781EwDNn4mFSm8+YK1qiN9e4DXY
EV9M2p/pwpSXW+IuXX4Ni5Z+znn8PVh6lhHLmdjXcKIqJq6LrA9jtu4KNhx4
DZkOkEQk6ce82M5Q6TAEAj8z82o1/QC22jXgpXQqEGJs9O+USgxiNt4Xf0v5
BYKYd6A/mekQ1qc19lCwORCcHwtwsnsNY7h16zX2g0A4H9nHDi0jWFHe9C06
rSAYfJurMMf6H8Zn57hA+jAIMu6vLNq6f8KCub7Z7pYFQcw4XwnHzBi233d7
fGUpCKp2dshu205gzv6r5gvSwRBoxWjYtjyJjeHuf5xwDAamXpekgJAp7OTW
9qnBtGDwScnTZRKcxmqKnrZ9mAwGKeVfkk8PpzFJx0OskTsENtovCRK/zmBx
fN6EKvMQWLjxiId2fBajHKJULYoIASFxuZ20kTnsQVBgSUZPCDBWP1usG5/H
5vQYZBJoQuFLsDF7wvcFzGwvIjPcMBQy/PxSHpN9xVrK2AX9vUIhqNA7IV7i
G6Z0Mz7++btQSHP5w6Jn9h1LF+Jnu78bCi+eE8vwwT8w5v9SQ51VwyDqmsya
7sef2MswMRo71zDwevClWVRwGVs5nuttURQGQbXNf/EeK5jNgeyB6bcwuNBa
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
a9bqBx96WGuLG08tB5vm/lucmXzI4VgZ/eXccnikPRlVZcWHzueQTP5XUg5D
JBtfz7HzISRwvtCiuhyqFS/okPTyIvmY9Kcj9eVge2tVdMKPF/HRbZwyby+H
L/eule1ivIjWW59nqKcctqgWN+7t8qCd3ahv54fL4cY7Nf1LFTxo4d5cTf9E
OWi8tDjf5sKDhhZVAs7OlUOpUv9QtxQParrqa9H3oxysWZjWX81xo5LhYYnT
G+UwfO2c6F4qN0o2kdjq3vuHO1TEGlzlRkEtD9uMSSugMraOwY2PG3lovY/u
pKkA/4cjsxHjXMipjNPhJHMF2Hz8VleWyIXMpW4od3BVQKuV0JlJKy6k/7aG
1EioAh6LU3kKCnIhRQ6agTbJChAOM+t6OcOJBEMs0wwUKoAn6qEWdQ4noifP
v9eiVgFdIeHPiLc50d6TPUwPVwE02+f+JCtzoq9rpxibDCvAQkmCv3yfA43c
SPyMmf6LJ6BYdaeVA7VO/SiqN6sA2oCshjthHKj8os5zXasKEGg8KGC5woFS
e4JN6q5VwKaA0ospSQ4UajDJq32rAlbHuNX6NtnRM6Lcj1q3CuhsbXIfa2VH
zkovCBpPKuCZWM2f7Wh2dCmv93W1VwUYlsdTC1xnR8eFBC3VXldA0+1yNtBg
R8pxd6Xw4RXw/I3GvNkRdiTM0Lit/KYCKn7MHDWZYkOMvkzvy99WwGud6Qmu
Sjb0Z982VjGnAmQKgzkKX7OhH25ljqXFFaBoNnJ9y4YNffpGoqpQVQFcFyxw
X9XY0Hvb8+TF7yqgvcXUw5WBDeFH0wePtlWA02Hwf14LrCjj9EZ6QXcF8G/k
mtM0sKKINn03maEKcAmJ1t6JY0WeOtGQN/6Pb7Vb3ThXVnS7Yo5JavZffqLR
Pj2nWNFlGdUv2d8rwPLPpcEYMVZ0Is23RHy9Al4amPS+PmBBalwjLzJ3K2Dx
1ezJpP9YkFiYxGlRkkq45p862VjOglgoH/GnU1fC8qdz934Gs6C/z97/FGKq
hK1fsuzsTixoeYOz7i1nJRyM2DcpAguacL4RJCBYCWS2SFSblwV1TtdcTpao
BEUx2Z8ym8yo5hKNDJ98Jdj9pZf73cuMsvssdxNUK6GeZ/ZeQS4zijqe38Gt
Wwm6T1g71F4xI693e3FvDCrhMd0x3+QrzOiuirETp0klnAjSe/tFhRlZFySq
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
Tw==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 8043.10154147568}, {0, 0.00046982406393834424`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 8043.10154147568}, {0, 0.00046982406393834424`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Black Score\"", "\"White Score\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.665562880341054*^9, 3.665563120326542*^9, {3.665563212086795*^9, 
   3.665563223012986*^9}, {3.6655634052751703`*^9, 3.665563414230522*^9}, {
   3.665563509211783*^9, 3.665563529500269*^9}, 3.665563591954049*^9, 
   3.665564492924674*^9, 3.665564559468136*^9, 3.6655647549780397`*^9, 
   3.665564869567772*^9, {3.665565298179818*^9, 3.665565324865158*^9}, 
   3.665565435845295*^9, 3.66556574181474*^9, 3.665566707128437*^9, 
   3.665566755619482*^9, 3.66556679491858*^9, 3.665567337913616*^9, 
   3.665569040744939*^9, 3.665569407485174*^9, 3.665569600229148*^9, 
   3.665572203390582*^9, 3.665574608787005*^9, 3.665578478513338*^9, 
   3.665581108788823*^9, 3.6655884122140427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{
     RowBox[{"Tally", "[", 
      RowBox[{"hist1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665563245845797*^9, 3.665563322199938*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5064116575591986, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5446265938069217, 0.}, {1.4553734061930783`, 
            1031.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.03957465339075, 
           181.43410881427653`}, {-103.21819631415995`, 93.17335224246484}}],
         StatusArea[#, 1031]& ,
         TagBoxNote->"1031"],
        StyleBox["1031", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1031, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5446265938069217`, 0.}, {2.455373406193078, 969.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{195.62377316204336`, 
           346.01830732292916`}, {-91.43810319048318, 93.17335224246484}}],
         StatusArea[#, 969]& ,
         TagBoxNote->"969"],
        StyleBox["969", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[969, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.5064116575591986, 0.}, {2.4943526411657557`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5446265938069217, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5446265938069217, 0.}]}],
          LineBox[{{2.455373406193078, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.455373406193078, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4553734061930783`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4553734061930783`, 
              0.}]}], LineBox[{{1.5446265938069217`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5446265938069217`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Whites-wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Blacks-wins\"\>", 
           Offset[{0., -2.}, {1.9999999999999998`, 0.}], {0, 1}, Automatic, {
           1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5064116575591986, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Whites-wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Blacks-wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.665563275299705*^9, 3.66556332268801*^9}, {
   3.665563511379821*^9, 3.6655635315711393`*^9}, 3.665563595920815*^9, 
   3.665564495923967*^9, 3.66556455231074*^9, 3.6655647583207817`*^9, 
   3.665564871709229*^9, 3.665565327187001*^9, 3.665565443520411*^9, 
   3.665565748474498*^9, 3.665566711335067*^9, 3.665566757026071*^9, 
   3.665566799020998*^9, 3.6655673424539957`*^9, 3.665569052051095*^9, 
   3.665572206384946*^9, 3.665574611323799*^9, 3.665578484492663*^9, 
   3.665588414753007*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Tally", "[", 
      RowBox[{"hist1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66556355148997*^9, 3.665563558479162*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5155`", ",", "0.4845`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6655635481111717`*^9, 3.6655635587100058`*^9}, 
   3.66556359973845*^9, 3.6655645439171753`*^9, 3.665565330532929*^9, 
   3.665565445952189*^9, 3.665565755985696*^9, 3.665566713575264*^9, 
   3.6655667588895283`*^9, 3.665566801251089*^9, 3.665567346852027*^9, 
   3.665569054233039*^9, 3.665572208673325*^9, 3.665574613883924*^9, 
   3.665578486793195*^9, 3.6655884163920803`*^9}]
}, Open  ]]
},
WindowSize->{783, 856},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 28, "Input"],
Cell[752, 27, 133, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[922, 34, 335, 7, 28, "Input"],
Cell[1260, 43, 73, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370, 49, 771, 20, 46, "Input"],
Cell[2144, 71, 7089, 178, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9270, 254, 365, 8, 28, "Input"],
Cell[9638, 264, 246, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9921, 272, 609, 17, 46, "Input"],
Cell[10533, 291, 5240, 135, 241, "Output"]
}, Open  ]],
Cell[15788, 429, 309, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[16122, 439, 688, 18, 63, "Input"],
Cell[16813, 459, 554, 8, 28, "Output"],
Cell[17370, 469, 556, 8, 28, "Output"]
}, Open  ]],
Cell[17941, 480, 83, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[18049, 485, 571, 17, 46, "Input"],
Cell[18623, 504, 384, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19044, 516, 784, 18, 28, "Input"],
Cell[19831, 536, 714, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20582, 551, 697, 19, 46, "Input"],
Cell[21282, 572, 48859, 852, 265, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70178, 1429, 613, 18, 46, "Input"],
Cell[70794, 1449, 5469, 138, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76300, 1592, 598, 18, 28, "Input"],
Cell[76901, 1612, 488, 8, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
