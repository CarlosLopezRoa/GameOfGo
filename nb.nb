(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    268299,       5230]
NotebookOptionsPosition[    266207,       5154]
NotebookOutlinePosition[    266590,       5171]
CellTagsIndexPosition[    266547,       5168]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.66550633122519*^9, 3.665506338800968*^9}}],

Cell[BoxData["\<\"/Users/poincare/Dropbox/Documentos/DMKM/02 \
Lyon/CMS/PR\"\>"], "Output",
 CellChangeTimes->{3.665506339564541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\<exp2.xlsx\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"Length", "[", "exp", "]"}]}]], "Input",
 CellChangeTimes->{{3.665506341586244*^9, 3.665506366879055*^9}, 
   3.665507102937612*^9, {3.665509480107182*^9, 3.6655094823229017`*^9}}],

Cell[BoxData["1089"], "Output",
 CellChangeTimes->{3.665509483176444*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tally", "[", "exp", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{
      RowBox[{"Tally", "[", "exp", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "1089", " ", "Tries", " ", "in", " ", "a", " ", "9", "x9", " ", "size"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.665506368042225*^9, 3.665506378421424*^9}, {
  3.665506690216901*^9, 3.66550672061477*^9}, {3.665506752773644*^9, 
  3.665506802041403*^9}, {3.665507285037897*^9, 3.665507308530128*^9}, {
  3.6655087804114122`*^9, 3.665508803867815*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.48597994530537825`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6789999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 541.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{32.42657798413484, 
           158.11541618286418`}, {-127.58057859826359`, 119.1384197271429}}],
         StatusArea[#, 541]& ,
         TagBoxNote->"541"],
        StyleBox["541", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[541, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 547.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{169.6216084881409, 
           295.31044668687025`}, {-130.30990205473756`, 119.13841972714289`}}],
         StatusArea[#, 547]& ,
         TagBoxNote->"547"],
        StyleBox["547", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[547, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{306.816638992147, 432.50547719087626`}, {
           118.05853248439723`, 119.1384197271429}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.544211485870556, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 0.}]}], 
         LineBox[{{3.455788514129444, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
            0.}]}], {{}, {}, {}, {
           LineBox[{{1.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.455788514129444, 
              0.}]}], LineBox[{{1.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.544211485870556, 
              0.}]}], LineBox[{{2.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.455788514129444, 
              0.}]}], LineBox[{{2.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.544211485870556, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks  wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites  wins\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Tie  wins\"\>", Offset[{0., -2.}, {3., 0.}], {0, 1}, 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.48597994530537825`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks  wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites  wins\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Tie  wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.665506371033051*^9, 3.665506378965507*^9}, 
   3.66550641375465*^9, {3.6655065729453783`*^9, 3.665506601929317*^9}, {
   3.6655066860747137`*^9, 3.665506720917572*^9}, {3.665506753243643*^9, 
   3.665506802526675*^9}, 3.665506845029008*^9, 3.665506931716157*^9, {
   3.665506964874015*^9, 3.665506979082341*^9}, 3.665507104204183*^9, 
   3.66550717646212*^9, {3.6655072815327873`*^9, 3.6655073088944597`*^9}, 
   3.665507365889553*^9, 3.665761460573309*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp4", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\<exp3.xlsx\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"Length", "[", "exp4", "]"}]}]], "Input",
 CellChangeTimes->{{3.6655090042564087`*^9, 3.665509006485896*^9}, {
  3.665509488577097*^9, 3.6655094909203987`*^9}, {3.665509686790695*^9, 
  3.665509697002138*^9}}],

Cell[BoxData["570"], "Output",
 CellChangeTimes->{{3.665509491423113*^9, 3.6655095083869057`*^9}, {
   3.665509697597197*^9, 3.6655097103122787`*^9}, 3.665510171622854*^9, 
   3.665518431361672*^9, 3.6655188104948893`*^9, 3.6655619848034077`*^9, 
   3.665761463289075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tally", "[", "exp4", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{
      RowBox[{"Tally", "[", "exp4", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"19", "x19"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.665509013903846*^9, 3.665509015645623*^9}, {
  3.665509633484962*^9, 3.665509638851931*^9}, {3.66550969202107*^9, 
  3.665509694118886*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5064116575591986, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5446265938069217, 0.}, {1.4553734061930783`, 265.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{32.42657798413482, 
           223.44905139058937`}, {-97.67733526367132, 119.13841972714289`}}],
         StatusArea[#, 265]& ,
         TagBoxNote->"265"],
        StyleBox["265", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[265, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5446265938069217`, 0.}, {2.455373406193078, 305.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{241.48300378442187`, 
           432.50547719087626`}, {-130.30990205473762`, 119.13841972714289`}}],
         StatusArea[#, 305]& ,
         TagBoxNote->"305"],
        StyleBox["305", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[305, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.5064116575591986, 0.}, {2.4943526411657557`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5446265938069217, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5446265938069217, 0.}]}],
          LineBox[{{2.455373406193078, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.455373406193078, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4553734061930783`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4553734061930783`, 
              0.}]}], LineBox[{{1.5446265938069217`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5446265938069217`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks  wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites  wins\"\>", 
           Offset[{0., -2.}, {1.9999999999999998`, 0.}], {0, 1}, Automatic, {
           1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5064116575591986, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks  wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites  wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.6655090174424257`*^9, 3.665509187874049*^9, 3.6655093663367357`*^9, 
   3.6655094710037403`*^9, 3.6655095092150908`*^9, {3.665509699061728*^9, 
   3.665509711682056*^9}, 3.6655101730778847`*^9, 3.665518432200453*^9, 
   3.665518811401883*^9, 3.6655619858323507`*^9, 3.6657614649769707`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hist1", "=", 
   RowBox[{"Import", "[", "\"\<hist3.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665562173049046*^9, 3.665562195422871*^9}, 
   3.665562300463366*^9, {3.665564484455473*^9, 3.665564484628093*^9}, {
   3.665567331413556*^9, 3.665567331526819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hist1", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"hist1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"hist1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.665562301674921*^9, 3.665562323977044*^9}, {
  3.6655626016376266`*^9, 3.665562618973947*^9}, {3.665564485989583*^9, 
  3.665564486924382*^9}, {3.665564890956016*^9, 3.665564895255678*^9}}],

Cell[BoxData["2886.515`"], "Output",
 CellChangeTimes->{{3.6655626146591187`*^9, 3.665562619658104*^9}, 
   3.6655631059369917`*^9, 3.665563500698254*^9, 3.66556358815171*^9, 
   3.665564487266374*^9, 3.665564749582944*^9, 3.665564895543001*^9, 
   3.665565292180602*^9, 3.665565736853921*^9, 3.665566697293372*^9, 
   3.6655667895102777`*^9, 3.6655673335472517`*^9, 3.66556903560569*^9, 
   3.665569399039043*^9, 3.665569532658485*^9, 3.665570218586836*^9, 
   3.665572200081949*^9, 3.665574601447055*^9, 3.665578475880809*^9, 
   3.665588409351223*^9, 3.665761469815309*^9}],

Cell[BoxData["2941.151`"], "Output",
 CellChangeTimes->{{3.6655626146591187`*^9, 3.665562619658104*^9}, 
   3.6655631059369917`*^9, 3.665563500698254*^9, 3.66556358815171*^9, 
   3.665564487266374*^9, 3.665564749582944*^9, 3.665564895543001*^9, 
   3.665565292180602*^9, 3.665565736853921*^9, 3.665566697293372*^9, 
   3.6655667895102777`*^9, 3.6655673335472517`*^9, 3.66556903560569*^9, 
   3.665569399039043*^9, 3.665569532658485*^9, 3.665570218586836*^9, 
   3.665572200081949*^9, 3.665574601447055*^9, 3.665578475880809*^9, 
   3.665588409351223*^9, 3.665761469819598*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StudentTCI", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"StandardDeviation", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", "1"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665562465208153*^9, 3.665562528670368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1106.1434590695583`", ",", "4666.886540930442`"}], "}"}]], "Output",\

 CellChangeTimes->{3.665562500712595*^9, 3.665562533751828*^9, 
  3.665562603711054*^9, 3.665563111976756*^9, 3.6655635032821207`*^9, 
  3.665563589944406*^9, 3.6655644895056467`*^9, 3.665564751777548*^9, 
  3.665566699400837*^9, 3.665567335573896*^9, 3.665569402723081*^9, 
  3.6657614751209793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocationTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665562655173931*^9, 3.665562661179215*^9}, {
  3.665562692013898*^9, 3.665562701698183*^9}, {3.665563148213397*^9, 
  3.665563191299259*^9}, {3.6655633645039997`*^9, 3.665563365334529*^9}, {
  3.665563522081296*^9, 3.665563526857325*^9}, {3.665565304428955*^9, 
  3.6655653225225554`*^9}, {3.6655654106352377`*^9, 3.665565430774765*^9}, {
  3.6655667291850224`*^9, 3.665566747942419*^9}, {3.665569517621872*^9, 
  3.665569521700224*^9}}],

Cell[BoxData["0.17959623938815392`"], "Output",
 CellChangeTimes->{
  3.665562661550383*^9, 3.665562702196252*^9, 3.665563117853347*^9, {
   3.665563150071553*^9, 3.665563191721943*^9}, 3.6655633659019117`*^9, {
   3.665563505799375*^9, 3.6655635276770687`*^9}, 3.665563590884326*^9, 
   3.665564490997011*^9, 3.665564752836919*^9, 3.665564868470006*^9, {
   3.665565296718285*^9, 3.665565322916039*^9}, {3.665565413844654*^9, 
   3.665565431376247*^9}, 3.665565739939114*^9, {3.665566702661648*^9, 
   3.665566748812598*^9}, 3.6655667932389593`*^9, 3.665567336655262*^9, 
   3.665569038629842*^9, 3.665569404863027*^9, {3.665569518710144*^9, 
   3.665569535996748*^9}, 3.66556959923076*^9, 3.665574605449296*^9, 
   3.6657614768537407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Black Score\>\"", ",", "\"\<White Score\>\""}], "}"}], 
      ",", "Below"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6655628752866163`*^9, 3.6655628798427258`*^9}, {
  3.665563211434945*^9, 3.6655632224809103`*^9}, {3.665563383558653*^9, 
  3.665563413725334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxde2VU1U+0Nh3S3d0ISPf5zSZEBUwQUZAQRFFUwMJCJKUbSeluOMQ5SINI
Sv8lRNqipRV8fde6636482XWXs/semb2rD0fRuTavQvXyUhISKzISUj+/9xK
dObVJXoDyf+M/ysruy/HKG97g5yd2DsvnQwsQ8aNSUbZB0RyK+cTSbMwlpnN
QKG7PuD+U+aGw1I25hXvQcFZ4ANRyTQXBA5zsdWzfzzpF30g1v+mPLVWAWZL
7bVHJuoLD2xohLxTi7C+BvIHe1d9gbHsefSSSimGexSwsprgC7zK136b/ynD
iuXpnBdHfEFvSi5XxqMC418Im5tk8QOzkv2wD4x4LDiZ1WbotB80lood2DZX
YftmcZ86A/2AvO9ezoXIGuwWHa9ZU7sfsE04//39koCNtaT0VpP6w63pydWK
sDrs5FORk8U4f7h6hs75a0M9VquU3ZL5xB+0KgrktmmaMKnv0rjEKn/4lKZb
EG/YjMWlFdVErPvDJUu98CPRLRilpaJygHwAmMSW2P/dbMUeMuGLXjgHAMfx
HQvV2+3Y/HsNqQfZATAutuRjs/0eM/OsS781EwDNn4mFSm8+YK1qiN9e4DXY
EV9M2p/pwpSXW+IuXX4Ni5Z+znn8PVh6lhHLmdjXcKIqJq6LrA9jtu4KNhx4
DZkOkEQk6ce82M5Q6TAEAj8z82o1/QC22jXgpXQqEGJs9O+USgxiNt4Xf0v5
BYKYd6A/mekQ1qc19lCwORCcHwtwsnsNY7h16zX2g0A4H9nHDi0jWFHe9C06
rSAYfJurMMf6H8Zn57hA+jAIMu6vLNq6f8KCub7Z7pYFQcw4XwnHzBi233d7
fGUpCKp2dshu205gzv6r5gvSwRBoxWjYtjyJjeHuf5xwDAamXpekgJAp7OTW
9qnBtGDwScnTZRKcxmqKnrZ9mAwGKeVfkk8PpzFJx0OskTsENtovCRK/zmBx
fN6EKvMQWLjxiId2fBajHKJULYoIASFxuZ20kTnsQVBgSUZPCDBWP1usG5/H
5vQYZBJoQuFLsDF7wvcFzGwvIjPcMBQy/PxSHpN9xVrK2AX9vUIhqNA7IV7i
G6Z0Mz7++btQSHP5w6Jn9h1LF+Jnu78bCi+eE8vwwT8w5v9SQ51VwyDqmsya
7sef2MswMRo71zDwevClWVRwGVs5nuttURQGQbXNf/EeK5jNgeyB6bcwuNBa
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
a9bqBx96WGuLG08tB5vm/lucmXzI4VgZ/eXccnikPRlVZcWHzueQTP5XUg5D
JBtfz7HzISRwvtCiuhyqFS/okPTyIvmY9Kcj9eVge2tVdMKPF/HRbZwyby+H
L/eule1ivIjWW59nqKcctqgWN+7t8qCd3ahv54fL4cY7Nf1LFTxo4d5cTf9E
OWi8tDjf5sKDhhZVAs7OlUOpUv9QtxQParrqa9H3oxysWZjWX81xo5LhYYnT
G+UwfO2c6F4qN0o2kdjq3vuHO1TEGlzlRkEtD9uMSSugMraOwY2PG3lovY/u
pKkA/4cjsxHjXMipjNPhJHMF2Hz8VleWyIXMpW4od3BVQKuV0JlJKy6k/7aG
1EioAh6LU3kKCnIhRQ6agTbJChAOM+t6OcOJBEMs0wwUKoAn6qEWdQ4noifP
v9eiVgFdIeHPiLc50d6TPUwPVwE02+f+JCtzoq9rpxibDCvAQkmCv3yfA43c
SPyMmf6LJ6BYdaeVA7VO/SiqN6sA2oCshjthHKj8os5zXasKEGg8KGC5woFS
e4JN6q5VwKaA0ospSQ4UajDJq32rAlbHuNX6NtnRM6Lcj1q3CuhsbXIfa2VH
zkovCBpPKuCZWM2f7Wh2dCmv93W1VwUYlsdTC1xnR8eFBC3VXldA0+1yNtBg
R8pxd6Xw4RXw/I3GvNkRdiTM0Lit/KYCKn7MHDWZYkOMvkzvy99WwGud6Qmu
Sjb0Z982VjGnAmQKgzkKX7OhH25ljqXFFaBoNnJ9y4YNffpGoqpQVQFcFyxw
X9XY0Hvb8+TF7yqgvcXUw5WBDeFH0wePtlWA02Hwf14LrCjj9EZ6QXcF8G/k
mtM0sKKINn03maEKcAmJ1t6JY0WeOtGQN/6Pb7Vb3ThXVnS7Yo5JavZffqLR
Pj2nWNFlGdUv2d8rwPLPpcEYMVZ0Is23RHy9Al4amPS+PmBBalwjLzJ3K2Dx
1ezJpP9YkFiYxGlRkkq45p862VjOglgoH/GnU1fC8qdz934Gs6C/z97/FGKq
hK1fsuzsTixoeYOz7i1nJRyM2DcpAguacL4RJCBYCWS2SFSblwV1TtdcTpao
BEUx2Z8ym8yo5hKNDJ98Jdj9pZf73cuMsvssdxNUK6GeZ/ZeQS4zijqe38Gt
Wwm6T1g71F4xI693e3FvDCrhMd0x3+QrzOiuirETp0klnAjSe/tFhRlZFySq
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
Tw==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 8043.10154147568}, {0, 0.00046982406393834424`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 8043.10154147568}, {0, 0.00046982406393834424`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Black Score\"", "\"White Score\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.665562880341054*^9, 3.665563120326542*^9, {3.665563212086795*^9, 
   3.665563223012986*^9}, {3.6655634052751703`*^9, 3.665563414230522*^9}, {
   3.665563509211783*^9, 3.665563529500269*^9}, 3.665563591954049*^9, 
   3.665564492924674*^9, 3.665564559468136*^9, 3.6655647549780397`*^9, 
   3.665564869567772*^9, {3.665565298179818*^9, 3.665565324865158*^9}, 
   3.665565435845295*^9, 3.66556574181474*^9, 3.665566707128437*^9, 
   3.665566755619482*^9, 3.66556679491858*^9, 3.665567337913616*^9, 
   3.665569040744939*^9, 3.665569407485174*^9, 3.665569600229148*^9, 
   3.665572203390582*^9, 3.665574608787005*^9, 3.665578478513338*^9, 
   3.665581108788823*^9, 3.6655884122140427`*^9, 3.665761478920287*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{
     RowBox[{"Tally", "[", 
      RowBox[{"hist1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665563245845797*^9, 3.665563322199938*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5064116575591986, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5446265938069217, 0.}, {1.4553734061930783`, 
            1031.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{39.29476055127931, 
           227.1757317447811}, {-128.53062847929112`, 116.8121818058936}}],
         StatusArea[#, 1031]& ,
         TagBoxNote->"1031"],
        StyleBox["1031", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1031, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5446265938069217`, 0.}, {2.455373406193078, 969.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{244.90181692174428`, 
           432.782788115246}, {-113.81432950966799`, 116.81218180589359`}}],
         StatusArea[#, 969]& ,
         TagBoxNote->"969"],
        StyleBox["969", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[969, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.5064116575591986, 0.}, {2.4943526411657557`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5446265938069217, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5446265938069217, 0.}]}],
          LineBox[{{2.455373406193078, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.455373406193078, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4553734061930783`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4553734061930783`, 
              0.}]}], LineBox[{{1.5446265938069217`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5446265938069217`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Whites-wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Blacks-wins\"\>", 
           Offset[{0., -2.}, {1.9999999999999998`, 0.}], {0, 1}, Automatic, {
           1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5064116575591986, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Whites-wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Blacks-wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.665563275299705*^9, 3.66556332268801*^9}, {
   3.665563511379821*^9, 3.6655635315711393`*^9}, 3.665563595920815*^9, 
   3.665564495923967*^9, 3.66556455231074*^9, 3.6655647583207817`*^9, 
   3.665564871709229*^9, 3.665565327187001*^9, 3.665565443520411*^9, 
   3.665565748474498*^9, 3.665566711335067*^9, 3.665566757026071*^9, 
   3.665566799020998*^9, 3.6655673424539957`*^9, 3.665569052051095*^9, 
   3.665572206384946*^9, 3.665574611323799*^9, 3.665578484492663*^9, 
   3.665588414753007*^9, 3.665761482618449*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Tally", "[", 
      RowBox[{"hist1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66556355148997*^9, 3.665563558479162*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5155`", ",", "0.4845`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6655635481111717`*^9, 3.6655635587100058`*^9}, 
   3.66556359973845*^9, 3.6655645439171753`*^9, 3.665565330532929*^9, 
   3.665565445952189*^9, 3.665565755985696*^9, 3.665566713575264*^9, 
   3.6655667588895283`*^9, 3.665566801251089*^9, 3.665567346852027*^9, 
   3.665569054233039*^9, 3.665572208673325*^9, 3.665574613883924*^9, 
   3.665578486793195*^9, 3.6655884163920803`*^9, 3.665761484937784*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hist1", "=", 
   RowBox[{"Import", "[", "\"\<hist1.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hist2", "=", 
   RowBox[{"Import", "[", "\"\<hist2.csv\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hist3", "=", 
   RowBox[{"Import", "[", "\"\<hist3.csv\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.665761493927745*^9, 3.665761525213955*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Tally", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Tally", "[", 
    RowBox[{"hist2", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"Tally", "[", 
    RowBox[{"hist3", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.665761989086512*^9, 3.665762033404027*^9}, {
  3.665762491222267*^9, 3.665762511491729*^9}, {3.665762545143591*^9, 
  3.665762561130396*^9}, {3.665762640082144*^9, 3.665762645415904*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Blacks-wins\"\>", ",", "1053"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Whites-wins\"\>", ",", "942"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Tie-wins\"\>", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Whites-wins\"\>", ",", "1035"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Blacks-wins\"\>", ",", "962"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Tie-wins\"\>", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Whites-wins\"\>", ",", "1031"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Blacks-wins\"\>", ",", "969"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.665761993883404*^9, 3.6657620337374077`*^9}, {
   3.665762488682128*^9, 3.665762511893098*^9}, {3.665762552197544*^9, 
   3.665762561686681*^9}, {3.665762641396595*^9, 3.6657626457599897`*^9}, 
   3.665764081366006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1053", ",", "1035", ",", "1031"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"942", ",", "962", ",", "969"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Whites-wins\>\"", ",", "\"\<Blacks-wins\>\"", ",", 
          "\"\<Tie\>\""}], "}"}], ",", "Below"}], "]"}], ",", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", "Bottom"}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<9x9\>\"", ",", "\"\<13x13\>\"", ",", "\"\<19x19\>\""}], 
     "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Number of games winned by color by board size\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "n"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<r1.eps\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.665762719621554*^9, 3.6657629210871887`*^9}, {
  3.665762983566049*^9, 3.665763009436462*^9}, {3.665763043638236*^9, 
  3.665763105057548*^9}, {3.665763517341362*^9, 3.6657635335317383`*^9}, {
  3.665763760638728*^9, 3.665763769668631*^9}, {3.665764029381669*^9, 
  3.6657640295965633`*^9}, {3.665764090220347*^9, 3.665764097578602*^9}, {
  3.665764133282981*^9, 3.6657641666811047`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.4510357470210816, 0.}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.761959, 0.470832, 0.940597]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.6333638863428048, 0.}, {1.5499541704857929`, 
                 1053.}, "RoundingRadius" -> 0]}], StatusArea[#, 1053]& , 
              TagBoxNote -> "1053"], 
             StyleBox["1053", {}, StripOnInput -> False]], Annotation[#, 
             Style[1053, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.9584254999999999, 0.877884, 0.5906629999999999]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.6333638863428048`, 0.}, {2.549954170485793, 
                 1035.}, "RoundingRadius" -> 0]}], StatusArea[#, 1035]& , 
              TagBoxNote -> "1035"], 
             StyleBox["1035", {}, StripOnInput -> False]], Annotation[#, 
             Style[1035, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.431296, 0.709773, 0.927077]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.633363886342805, 0.}, {3.549954170485793, 
                 1031.}, "RoundingRadius" -> 0]}], StatusArea[#, 1031]& , 
              TagBoxNote -> "1031"], 
             StyleBox["1031", {}, StripOnInput -> False]], Annotation[#, 
             Style[1031, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.761959, 0.470832, 0.940597]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.733272227314391, 0.}, {4.649862511457378, 
                 942.}, "RoundingRadius" -> 0]}], StatusArea[#, 942]& , 
              TagBoxNote -> "942"], 
             StyleBox["942", {}, StripOnInput -> False]], Annotation[#, 
             Style[942, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.9584254999999999, 0.877884, 0.5906629999999999]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.73327222731439, 0.}, {5.649862511457378, 
                 962.}, "RoundingRadius" -> 0]}], StatusArea[#, 962]& , 
              TagBoxNote -> "962"], 
             StyleBox["962", {}, StripOnInput -> False]], Annotation[#, 
             Style[962, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.431296, 0.709773, 0.927077]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.73327222731439, 0.}, {6.649862511457378, 
                 969.}, "RoundingRadius" -> 0]}], StatusArea[#, 969]& , 
              TagBoxNote -> "969"], 
             StyleBox["969", {}, StripOnInput -> False]], Annotation[#, 
             Style[969, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.761959, 0.470832, 0.940597]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.833180568285976, 0.}, {7.749770852428965, 5.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 5]& , TagBoxNote -> 
              "5"], 
             StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
             Style[5, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.9584254999999999, 0.877884, 0.5906629999999999]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.833180568285976, 0.}, {8.749770852428965, 3.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 3]& , TagBoxNote -> 
              "3"], 
             StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}, {}}}, {}, {}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["a", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 6}, {1.0916590284142988`, 0.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["b", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 6}, {2.091659028414299, 0.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["c", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 6}, {3.0916590284142993`, 0.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"Whites-wins\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, -4}, {2.091659028414299, 0.}], 
       ImageScaled[{0.5, 1}]], 
      InsetBox[
       FormBox[
        StyleBox["a", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 6}, {4.191567369385885, 0.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["b", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 6}, {5.191567369385885, 0.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["c", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 6}, {6.191567369385885, 0.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"Blacks-wins\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, -4}, {5.191567369385885, 0.}], 
       ImageScaled[{0.5, 1}]], 
      InsetBox[
       FormBox[
        StyleBox["a", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 6}, {7.291475710357471, 0.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["b", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 6}, {8.29147571035747, 0.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["\"Tie\"", {
          Directive[], 
          Directive[]}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, -4}, {8.29147571035747, 0.}], 
       ImageScaled[{0.5, 1}]]}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.4510357470210816, 0.}, {9.935745554537123, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.6333638863428048, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.6333638863428048, 
              0.}]}], 
           LineBox[{{9.749770852428965, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {9.749770852428965, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{3.549954170485793, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.549954170485793, 
                0.}]}], 
             LineBox[{{3.733272227314391, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.733272227314391, 
                0.}]}], 
             LineBox[{{6.649862511457378, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.649862511457378, 
                0.}]}], 
             LineBox[{{6.833180568285976, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.833180568285976, 
                0.}]}]}}}, 
          StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
         "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, 
       FormBox["n", TraditionalForm]}, AxesOrigin -> {0.4510357470210816, 0.},
      CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1.0916590284142988`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2.091659028414299, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0916590284142993`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.641613198900092, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {4.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {5.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.741521539871677, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {7.291475710357471, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {8.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {9.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1.0916590284142988`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2.091659028414299, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0916590284142993`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.641613198900092, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {4.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {5.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.741521539871677, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {7.291475710357471, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {8.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {9.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Number of games winned by color by board size\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"9x9\"", "\"13x13\"", "\"19x19\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.5079726666666667, 0.313888, 
                    0.6270646666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.761959, 0.470832, 0.940597]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6389503333333333, 0.585256, 
                    0.3937753333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.9584254999999999, 0.877884, \
0.5906629999999999]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9584254999999999, 0.877884, 
                    0.5906629999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9584254999999999, 0.877884, 0.5906629999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2875306666666667, 0.473182, 
                    0.6180513333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.431296, 0.709773, 0.927077]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"None", ",", "None", ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}]}], "}"}]}]}], "]"}]& ), Editable -> True], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.665762750116197*^9, {3.665762795917556*^9, 3.665762921638126*^9}, {
   3.665763044087165*^9, 3.6657630575825033`*^9}, {3.665763100424564*^9, 
   3.66576310539485*^9}, {3.665763528350348*^9, 3.665763534016676*^9}, 
   3.6657637701925783`*^9, {3.66576408360679*^9, 3.66576410044398*^9}, {
   3.665764136795423*^9, 3.665764167140622*^9}}],

Cell[BoxData["\<\"r1.eps\"\>"], "Output",
 CellChangeTimes->{
  3.665762750116197*^9, {3.665762795917556*^9, 3.665762921638126*^9}, {
   3.665763044087165*^9, 3.6657630575825033`*^9}, {3.665763100424564*^9, 
   3.66576310539485*^9}, {3.665763528350348*^9, 3.665763534016676*^9}, 
   3.6657637701925783`*^9, {3.66576408360679*^9, 3.66576410044398*^9}, {
   3.665764136795423*^9, 3.665764167726254*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"10", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hist1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"hist2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"hist3", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"hist1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{"hist2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{"hist3", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}]}], "}"}]}], "]"}],
    ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Black Score\>\"", ",", "\"\<White Score\>\""}], "}"}], 
      ",", "Below"}], "]"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.7", ",", "4"}], "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{
    "{", "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)(score)\>\"", "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Smooth Histogram of the score per board size \>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<r2.eps\>\"", ",", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6657631187414083`*^9, 3.6657631242417727`*^9}, {
  3.665763209148282*^9, 3.665763334826537*^9}, {3.665763397097724*^9, 
  3.6657634320571012`*^9}, {3.6657634714066143`*^9, 3.665763541293088*^9}, {
  3.6657635768669*^9, 3.665763779950197*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJxcunk0lW/0Nn7mo1CSihKSBiWVzKm9i5B8ECopRWVIUYYQlXmolDESIiEZ
QqRknlPmhEyZZxkzn+M9399av/dd7/v8c9Ze93Pfz97Xde1zrr2es+PaHW1j
EoFAGOAmEP7n88j/dy0D4f+/KOahndLLkDriRvnqEwcOEUG112EZTmQaCHBX
x8GkZB59WGUZFvf0JwMtHm5WD4Cl1jKQJS5UWUjGQ48xl8OM3jLYqEcHj1yI
B32mXJqD0TJcCni/d6dVPDSEXB9i3FyG7Y6Ez29c4kHt4DMhd+tl0Kf27eLw
joeSiiw9NqdlkJ88uUfIMx4UDLv8n7kvw0hS98U0p3jIXFhTye27DNpjbBKx
t+JBLOAI8WXwMvg/DZ75ey4eYkUN5LZHLoOLil5qwNF42F7sZRUTtwx7nAwq
XmyPhxD9tPd7PrDy6QmxpDDiYN3M7+7krGXo3mKkNN4aB15PyVslCpbBNaBE
TP9LHDB3HtD+XLEMPiKd7lohcWCfe/6JQt0yjGmkb6+5x8JD16W4qGUZvkVG
ry+/EAdm4++XlLuXQSctPVnoWBx0ef6UqBpehri8V+RPu+NAT4BhfnZ6Gbre
Oaupb4qD+qzdb5uWluHYhg79N2viQE1Tq+0SeQVuMgtiLlPioHjw/sZu9hX4
edyrgZcWB/Iub8+Y8KxAo4B+/+X1cZDBW+0+yr8Cw4rKxBihONifPpdzd9cK
cIp9b9OWj4PY00Kz/w6swFJ5b/OPy3HA33NazEl6BY5rhOlfYfEb7GhzgwAr
kPu18O2ZvDjg3BgZ4amyAq1K/S21y3HgmVTeuFZrBdhdqV5bleKBqTjJ4a+3
AlVK/NE6IfFg1853apPRCtyff3fj9XQ8/LVVfPjq5gqMWupv3nTxHZhyWnwS
tF6BA5Xsu2or30FXXMh4rOMKhN26lNqplAB6xwt37XNfAQu5kbyz3xOgrmnY
IPXpCvxTEfKR0H8Pqnc2hkgGr8AjUvc379n3UEQ/VpMdsQJzApFSumGJIB9t
QoM4Vv4hRgIhqknwUdb/eGnKCkivK5xXJSXDvvpsu9NZK+AQ53DdsDwZYm72
fqjJXwG96FuK1cEpsI3EOahTsQL6CYlB9y0+QPAracHftSvQx+EZelorFTiO
GF640sLK5/IS46lAGnj8eOzX27UCJ89+q20PS4OV6xkVZsMrwK1WkbvClw73
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
qfHVft0zVGw2CHc+YjACoxt6OLk0qFiT6Rkn83EEuPNvSP/QomIPp3BEFNso
yJkPXvHSoaKpm3P5FcNRMNxs7n3iPBXP6nk4m2aPgk/xWOqKHhWP/CUmJG0c
g1TLOy2fL1ExXDL6Ef+dMWjaOk2wuULFtvq2wMQfY8AotxUVN6Iif9npSmXR
cRCxmT87fJ3FXz3zV7f3OKgLOjrGmlCRE8lKtwfHwebHSszVm1RM2855pFnl
L7yyd/6x9TYVmd7yrjzv/0LRTtLsL0sqHnTdVraJfQKGaj34A6yoyLsrSrLG
YgK4HtBPqdtSsajlROjh+gmQ2fvEgm5PRTdDmcBXWyfhSiNHSPF9Vv5ranQH
1SfBy8Uv/+EDKiZOB351dJ6EZDHuQVlnKsqU8w9qfZyExpbg9bOuVHzKvvrB
pH8Slj22yKZ6UDFe8V1qNu8UCB9+ZWjuzapX3H9aRX0K1Dr4H+96QsWOKTtR
LpcpuPs4Kr3Ll4rl0uutNmROwUsp4dZwP5aeuXLjzwxNQUF3LOlCIBX3X03m
KOCfhoFne/Zzv6CixO4vSrfPTsM6+USd6lAqLm9Z0dP1mgapAbEHPq+o+Hh+
7JZDzjRcDkyNVYykIs/ulrjfk9PgflyimhlFxXsbskPu756BxJHMf9kxVNxo
z+Fz8fIMNITICNyLo6Is52SRY+AMLJ78qnwogaWXJjF657cZEJpQuDOaSMVd
AS8n3VdnQCW8IDQ+hYrbgz49vi09C5YqJwuN0qiY9dNcPdRiFkJmSof4M6g4
pEFrJcXNQl6UyoaWT6z+H7zyIKV9FvrOfJcL+kLFrSca5IJ5/gH7gvo1jRwq
xvh5qGSo/wOJ2Nona/Kp2H/TPofq+Q/0tbQzSgupeOudNdkr7x+4rjS2OZdQ
UWlWYv+BuX+QkHCBcrSciiKrelwz4nNQq9sqNveNpZfR169rTOdgjmBwLv0H
FbMlJnM/Rc+BQMqfh7drqDj8TW0y4vccnLp4LX5PPRXHKQOt9tzzcJvaX9Pz
k4rPljv3yp2Zh6B00/nIJhb/pEy3Bvd5+GowInjxNxXVBw8GSubOQ88aC1We
diqadWj6as7Ow5qsibu1nVQ8Q6U2costwKFr1mFPuln42PBrWVxfgAvr/hWd
6qOis19a5H+vFuDRV/sRwiAVQ6eTut7ULUC8yRJ37jAVT766pa1HW4Rq7odH
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
ueU8Ac1FkKwW1zxTx4JrlrOzuwSLIU1M0D61mQVd3meVrhwthgy2B8W2kwUj
bFvmBp9iyO4ei5DpZ4Hnt1caxwqKIbfEdEfPCAvSCkfNx/4VQ358ZXnUNAvC
7eIm5raXQNGjXedNFlhgaL495fzlEiizezu7isAGnjz7UvHoEqjSE3pcR2ND
8sj5TsUfJVCr7LXRn86GAU9pIX++UqgXnvhPexUbapoc6Vv2lcKPhbPHyWJs
eONNYZEcS6GlvaovfyMboPhx8aq3pdBeoHbn9mY26K4UXGnaXApdse9Wqm5n
w7Dx5LJG3jLo816VMKXChtbZ+G13dpfBoPW9fR/U2ZBjeTP+lE0ZjOhO/rA+
wAayfCz7XFgZjCuct5U6woZllpSZqLIymF5ZQ+zS467P+Y8Jz5bB39ndYZHG
bEhRyfSpkyiHxeZ4BePzbFh+uDut/mg5sHJWlwpeYoPzTPxnKddyIEbfN621
ZYNBYUbPj9hyoHhNTfk5soHj2/h6oqYceC3NHh66xYY76w923P9bDiu0v20g
erJB7LJiTIx4BQjI7c3M82HD3WNL7qaHK0CI/l7X9QkbFuoaLEuvV4DIpHCP
cggbkhQOWc6FVYBo4wPXiQg2rL/z9QPhawVsyJpmJMWwoXGmzID4pwI2hV94
a5XABo0kaX/GykqQcavduymVDSM9ZPeDuythi5l6Q0cmG3TcxBK/XKwEec1E
6/A8NrQM6T4MfVQJitJrOAbFbHj7Lf7R+KdK2Mnr81ygig33DG38ujsqQW1k
ZmtNHRuUVlbIPuWtAvXai0W+zWzYG1XcIbSzCiD9++kDnWwQkOccCbxQBQdC
NCbYfWywVHY6LPO0CrRuJnnnjLCBVDWzbyqvCo6cWbvOZZoNoUPqN1aOVcFx
Dd+POxa49ohF/+I2VIO+xNzhMQ4bzjy4m1Z5shoMyRa/E2gcmPFYevXSpxpM
BuqcLekcWDTGZ3u+VMPZyn0rJFZx4Nj78KEvc9VwITk59pcoBzYVWvuiYg1Y
PhPdHbqRA2sDLSzartaAtePD7/qbORChmv87NqkGbA3/XmJs58DshtDID6M1
cE3NklmpwoFlO7ST6YrfwFGsIchbnQMp/A7rG52/gQsbtuw/wIEyh6vVK/K/
we3uDwVMHQ58zp8XLOWtBfcSMaNsPQ7Y1YX+phrVgle83+gNYw4U/jHqa3xb
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
mMj3q6fUifiWx1b53qthiOKlqaUDEXeVfeDZ0zcMGxbVyfwHiFh7uGVPwZYR
eD1yo/aqFhGf0kqKN1wfgU0dieFVOkTcmtNpeOm/EYir7bbcfIyI0bV//V9x
RkCmcI2ijx4RA6ta81sPj0JC+oml3lNETF0b9k88eBTk3viU7Tcmos/zu2F3
O0chKeRL4KszREzTWdjJlhsDeZ/Zs6xzROQUef1Lch2D1JtbN5teJOIxt3qJ
wPIx2GFjPpNtScTPk6SILJFx+HQmPF/YmohTo5Q5KZtx2Hm0zs/JlojKipMN
vbnjkKXBY9hgT8TCp6P2C/wToLZ9n4SiIxE/vdr71vbSBORIOI88cSbiySV3
GuRNgLpgctaIKxGTL8967l02CfnkXi8dNyL+qL4nuHzXJODc2mPxHkS8JmZe
8tRyEr4O6K2h3ifia5f6F2VBk3CgxbfX3IeImm/0BD5+nYTSyvyUQj8ixrU+
uX1iahK0c+dubXjCxcfNwypq4xRUJm875BZARK96ScFw/Sk4Em0h0BZMRIMR
YSt4MAU1zyJ+7QolYgjvSJt/1hQc96p/9zyCiIn/fPrd/kxBnSOv40wUl29V
eq+WrZ8GfUvQOBnDzRe7ykPx5DT8MHThTY3j+peXODbkPQ1G2h8aVyQQMdul
9MbW3GloVuuLvpJExIaWLdnTk9NgIid2pSKFiM/LOoNUZWfgl5i+isxHImrf
l0oePzcD5+h+hAeZRBwbuWso+HwGfrMLqruzuefpyPMIq5mBC5N/X0AeEf/y
N/93kzILPd3y5lEFRFyjl77ynfosWDZayi8VEXHbaLXpWudZGCiJnD9dRkSt
Z5ep5R9mwTqroTirkoi3rOx2xA3MwnA837NV37j8lVgb8VZ8Dq6G4xnHOm49
bVGbKDg9B2OPbkrXNRKRRb57bzBwDq65pUzKN3P58KT3kkD1HEzZ9ec+buPW
d82HpwqUv3DDbJ3vnw4iWrid+6ii8Rfm9E7pa3cT0dGh5/Zal7/govlo/ds+
Lp+zDip+S/kL88pfh0hDRBSZUz9wcPAv3Jae/3RhhHv+a3P9DuL/gCm83SN/
nIj2U89UdIz/gTuv1ZF100RU7G658eXpPyAsvlx9e46IZCGK59fSf3BvpLGr
eZ6Isr71foeZ/4DcsSxZhUnEfB+hJ4eU5sG7dv/NYA4RVz9VS026PA88ha6a
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
abjzdfdHf/Uf8E17rmrEk4bfvRbHnYJ/gKe46Y5v3qRe+KKPjv3+AVrznc7P
/cj5y3abLErVglC5ZovRCxoeUL1anelQC39ele47GEhDcdnYrqNVtfDxppz3
smAaqpvbMVKE6sBeNrm/9Q0NW38zotZZ1cFxLtEjSWGknjTXVLiX1sHqX4HB
zuE07F2Qu82/pR5aYrgnNaJoeCq+W7jDth6i7jue3hZDQ+Fw55zehnq4ozIR
PRtHw0tFXjWH9zWALJ8x5fsHGn7T1T079KIB6APNl0KSST09yQfKbANUZpz5
eOcjDbP4lkk4XG6EQPd8HsV0GmYX3tW4WdQI+hdkrq/9QsNfR4vU8/f8BInt
cbl9X2n4Milnr/ubnzA1LbDxSw6pv4l7O1K5myC32M/S8xsN/a+6OR22b4Kn
AcyKy4U0vGYfuY5vrAk0rtuKSZXQMPAgMS9r/AsEZIYdaOU0/Kv0c9an4xf0
M/Wb6ito+IP/1BtCuxlSG+ql31fTkDt2m5p7YzM8jFLxtK2lIUOi5OesZgso
3836fbKBhutD98oqNLTAqmNSKNhEw6kLrSyFC63QvDYycLSZhqfTtYybmlsh
8veGsfw2Gg6qb1IZuNoGZmmeJ1520lBt1Kr7VF8bHHzMGWncQ0NCZXrV6P52
oGlaLcn20fCwo32Jgl07VIj0n+f5Q8NNdwfTGbntEDChndz+l4YZZTfGdjA6
QK+giitlhMyv7eIerNoB4s8VDR+N0dDuB81A2acDJg3Ss7QmaXis5v1x/oYO
yNkrvn7HDA33PLKTZGzqhCe00Dvzc+R8U/PixvU64Vzt6rKKRRqG5SYLNUR3
wuZwV+EwTjrKCoU2vh7qhD6LuQcWNDriaR21g3u7IPmIaYMSk45nLWfz39h0
gd3qLsn1bDqq+W/Vyc7qgqNdmk8GltHx6PO58z7UbliRUtqVuZyObYLPb3Ap
d0OTk9zhZ6vo6JB6f6+oRzeEn01+cXUNHZ9E+cT/quyG21tER6TX07H/3fk+
sdU9IDMaeJyxkY7/neW1IjR7gJLH/a7xf89HzbZ32AX0QLmP43yMIB0pvYzT
j5t64MXVCY0HW+l4Ndzyrxj/b7iyx/jDaVE69l7/8feazm/YwdlCbNlOxyLW
Ia/jb37DeNUZvfGddPTeelKzsfU3ZIXmfyncRce9L/ae2iTQC25mMmsC99Bx
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
mjN5Yq44MlDz29aEe3848VCDI1XahYEi3A/0xSgUZERNaNNdGbi5ffGa23oK
VlkbpzW4M/BqKEdTwC4KBh1tWR7jwcAfjWUvNRQpaLBWzdjuGQOnBs7Wf75A
wV2/8/NO+ZJ8GrS/k3+bgtMfZfiFnpN8lLScNXGmYN6jOKuxlwzkWzLSSX5J
QQ8NwcqCIAbKtTtIecRSUFPEf1vAawauq/VsnsiioOAE0+lGKANlZgmB/moK
DuTb/jr0joHfSveHXe6mYKr/8N7lkSTfJoZfnp2k4EMDfa+OaAZqfZFa84VJ
ReW9Db0psSQ/agNnfNZTcRVNVf5xAgN9+ns4qrZRsflHVtD5JAbufPS9wkSG
ipHvpMZ3pDJQ6Kd4lf4xKppZRJ5cSGPgaW/vqBgNKh48whdVmcHA8IImiqw+
FWmrvTjeZjJQfFd1ArcZFSs6OS9aZjPwWDlv3EY7KgYkW6UczSPjexwX0nWl
op5T/7INBQy8Iro9qcKHiuJnda79KSL1a0A9YvSKipNC1dlfSxl4YL/2kS3h
VMz5p7jB+zsDV6/o9ZuNpeKT3HRzvSoGdsg+evcnmYrnfMTL9/4g8diXafMv
nYqbr4aKMOsZ+GdOsJrIomKfJK/9z0YGtlgMLO3Ko2Iyh1tj7C8Gbs9pFtIr
oKJd1dyeh62kfn8srAsrouLRUNOnZzrI+c8Ix/wppuIKs67uLd3kvIcCzyiU
UPEXaMlN/Cb5bBasEEmej1he9rKon4GmnXdzNpDrTdvk/gUOMjBMyL0gJJ+K
Bz4kq9waZqDZa+Pdh3KpSLUXDZcbZWDAi425Y5lU/H4qaGHFBOl/745Nln2i
4svNPFpdUwzcaPNmU1kSFa8OOSZ+nGVg3dh15ekYKu7MmmC5LZD4TqaduvSO
ihOexvoXOZg4vfpc/nwQFbN1WjLFqUzkDD5S30Pi6y6htnaJzkSj/sgrgm5U
VF/IN60mmLg5f/u3tAdU3PRdpuQdFxPD9B0rU8yp2Bsct8Wah4lpH141bTGi
YtItQTvllUzsVF/lufwSFW0P+dfx8TJx0vnP1KNTVFRaRuz+u5aJdw2Dr/jK
U3F5s61b9gYm3n88v0d+LxV/xg53+PCT8Tc7UUJEqfjOVl/WQICJmTnFWukk
H01UG/z3bWGicHVXfSCbivs3qg4RIkwc5HceOz1PQc4/Wcd+iTFxbEM9vfcv
Bcs+S4XF72DiP22hvTfbKPj8SeSsvQQTLa1aFfqqKHj5It+5s5JM1Hi3OsM4
j4Lbd3jFC0sz8bn16ZDZFAqOz3Ayp/5jYi6ne3hEBAWzSqyulMgwUeTl6V5L
Uo9ugf0Zr2SZ2C4+MHjHnYJnjXVW35Yj80nkpkXYUpD/QPUtlGdi4YequPWk
vn8TSoWrFJlIVDx+VHOFgomN6QI9R5loLGmp0qROwfvR4jafjpP4n/4J+45R
UPFeaI37CfL8VPPIn4MU5FHmFdc+zcTdIwGyHLsp2LjO7dGus0xMsjt+7O5W
Cr7tnWvl0CD7mSzUPEf60a1PpjI/tJhoY3ZoKpCbgvtcu3wiLjJRjzOZqkKl
IIeW1p+7OkxUlYm2M5zhxFLRMkWVK0yMMVsZOTjMif6Tcm/49ZlIvryp7Tcn
6hYmTw0ZMvHTAeEM2VZO3PZCVC33OhPnhFPDOOo5cdQwKMbvJhNfff2psbOC
EzP/46Fdu81ErVsPwtILOfEx3UlH5g4T5dxuF4dnc+KZuok0tiUT13e7X/6T
zol8EcYrWqyZGDKx38E1mRO7LVuMP9gwscqv9bNFHCcmKKp9c7RjokTSlWUx
kZx4j7eA/5w9E6kfI1aTG0VU6JaxFnVi4lGq81DTK05clhpXOe3CRN4Zu1tF
Lzix3llwe5krE8V/bl3V6cOJoer+Tq+fMFGlInNkC3l/uLGVaDb1ZKK21KGV
Tm6cuHfM9j8Fbyau5BxiTzlz4mLesBevHxM/K7vetrHnxGJf/b7fz5koVjEe
y2HLib56DfIZAUxMv9y11sWak4yj+urpKyZu+qtDnbvDiaKU7HGdN0y8VVkQ
qW3CiSPVUqckw5iYocVrF3qdEz+HRUZRwpn48GHA5Fd9TnS5w8dZF8lE88ZT
ZXG6nHhK3uti1HsmWt1mlBpc4MT1KympNnFMPLEmd6ZFnRM72624T3wg+T2d
1bjiFCfGJfZf25zMxK3bDJmTxzjR2kEnZySVifWzvuGP5TlR/kz1hm+fSDxW
3l+feZATuQSVLJ5/ZuJOgzoTb2lOrBtOLzf6ykT58WL2Inn/DckWFz2Yw0SL
oK7apa2caPws1H7ZNyYuMoRVfDZyovRl3p+tBUxc0ezim0Devxd2uUklFTOR
zvLXOMfixKLFuafOZUy8JLyh3H6JA30qTHs0Kpio+EOzdtcEB1560yW3rZrM
/2x83ZUBDhS5rRUw+4OJE5y2qavI9wvDh8v+ldcz8VndLrejPzgwgxtUQ36S
/vNxePV8IQc6tySH32lm4hsne5u9nznwZLzo4pE2Jj6uWqbzL44D1z0I0lrb
Sdbrvk/gvxAO7DjBk9TXzUS1lZGvKT4cGMvvxP7SS+qr7Ms+HScOtBqc0Pcc
YCKlhtqobMGBkGn89fJf0h9ibDtL9DmQ5dGyVmqEiSV5H7b2qHPgj0tqZrQx
0t8evSkOOcKBr3cWlNRPMNFJcUhuSYoDjeZktr6fJv3teDawtnDgnrI4O9s5
Ji77e+PTtxUcOBckWH9y8X9//xP2xHhxCQpu+O8W5CRwxPrCiYKmJfA+SLiP
Ugl88V1jPjJtCS6y7TrzGQSeqJQd4/NdAuGmYdmXLAJP5wbZS5gswdB7/efG
ywj8zZK9N3BsCdJtGoZklxO4OSbeQmfLEjgdV1XmWUXGD7hU5zO/CCc2ZIe1
8xJobvua7lu/CGv7peaS1xEYJPx22ihxEdrTI8894iMwZUn+L/+TRYhx40vQ
2kTgZzF1jQz9RbA878XcIUjgkJw8j9LhRZDbRrk6v4VAVcIoqXDtIhDTVp8r
RAg0NZCXUhxZgJqi/tVh2wisDlgVm1eyAMEvdUwsdhL4S/7wlqPvFuCaUXWh
0i4CmWMLn6vtFkByv5Lg+j0EbhuVKzfSXIBZRobNgDSBStJyEyzJBcivF/+R
uY9Ae5bHp3TWAnhFhoo/O0BguaBwrUXXPJy35n189RB5vdAe44Nf52HLUbc2
aSCQhioF7JfzMLhmXoahQOCFgbmMTrN5SOsx9W1UJLAyRtM/W2UeHD52/Yk5
RuADy5vUN8L/+791WkoPVAg0G35z9P7iHPBqlL05fZJAjv+uaZxpnINWYZgW
OkMgl29u5cbkOYgeT1YbP0vgKe2cbY1P58A8XzS2UIO8/oB9voPhHBzyD6IF
nifrMyzJWQFzwDDg0b15icBNW3bIOa+fgyppp0+HdQl8fyHe8ce/WQiiTq5Y
cZVAA1It86WzYPDD+EanPoEXFUfqZ9/Nwq53Ld9SrxHk/tEip9huFqbN1Ta5
GhP4ykTWVE9jFvIUCqwv3CIwLeZ23jdyP+ax6kDVTlOyP+7NlH76LGh2xm1f
vEPgOR0FvYqWGRBMFnSusiRw63LD22YfZ2DA0b/57V0CwXjvTJnHDKSqEfus
7hMYIvVFqFV/Bh4K2T079oDA3d/CecMPzoDyv+G+DQ4ELihttt64cgZW5eor
DDoRePPcZJ587zS0eDe8ynpE4Bb1C028X6ch6orqhLcbgTuPyfn7+k7DHcns
U/pPCVwVOrc9w2gaZDmko//zIjD2x6qKx4emgV4VyUn4EOhTLTw+s2IaKkP4
LjX5EfiNv4qxsmcKAk29UuNekPO68iuqNH0K9IHCYx9I9pvNqy/iMQUSy62N
1IIJpC+5jQpcnoKp1v6crSEEqoTsVcvYMwW5CTp8k2EEHlH7z2yEOgVPH1Zb
FIeT+K7QVc+vmwSNU0rfg6IILNIV2rc3ahIENmeImsQQGJ2xyhruTUL/X3EH
iCf1caXSoUd5ElK+hv5cmUhgWdl2GdENk/DAk1e6O5nsj51kxtk/Acd03DzS
PpJ6e/XF+m76BKyUmO9xSycwqfzpazfXCfg1bwqXvpB6eJJe85/mBESUdwVI
ZBH4Y4L3moPwBJgGa40u5ZB6V25+Zjw6DgdulanWfCOwPdYQxrLHgXoIIsIL
Cdy7Ve+fgOc4fOdKWbQuIbBwcb/O6IVxePlL9PzxcgKr5CPrTUTH4WpsUNLG
StIfKJdmn4+OgbgtD9dQNYG+kvZM06wxmFRxMsipJf3A0TtiwX0Mcvgmv/o2
EJi4T2TNMY0xeDJgvM6wicBQz5DeM4JjcO5zi9n+FgKt2o6sEvozCpufqJWy
2gkU2HzGMOvjKPRdKNja3En6RanW+90Oo5C8/cCDhB4ChS4qr7NTGQW7mbh6
hz4CL93PMo/lHYWjJYKS6n8InIrb8rSg9R+sCPR3FxkisPmkz7ua6H/QdJ3o
mhohcL5oO+OX+T8Il7E7VDpG4EFbbsneQ//gNjHyPHiSnN/Gyqglxj+QadQf
vj1D4ArPO2slqkeAEt2gLD9P4FxG4tDdVyNQflf17eolAveUK3ztMxyBF8ey
53o4WahxXiTRVXIErqyT1kinsbCJ8i8gY3IYdvRGJjxhsrDLefhrm8cwjKfx
ETpsFtY4sj96bx2GrMdeV3dzs7CDz+Vj0+chcNOkfOFcwUJ1/YOiZWeH4Kyo
NW/tKha6DBpJ3v7zF/gn+00i17BQbLb7TaXLX/hdoFN0bz0Ly89XTs9s/guJ
z6sFVTeysCD+pvZkxiDcN1S6v2kzC9OP2Tl/1xgExf8yfgwLsvDbSoPsx6N/
gIcuIZG3lYUfA+SmxLz/QGNt6GN/URa+CJbITtv1B96G87Zf207W29w4sK9i
AG5Zuh04IE4eV44y424PwD7FeV+u3Sxy/yHJv37FAHDwmg227GFhn0GShV1y
P5R2dSkl7mXhWsoLl58a/eCfohXitJ+FzxY379092we6zmXT5w6ysEWPf/mD
kD7Ypg5nxQ6zUH49KzRXqQ9Gt6TEzgALsyVqf88O9kLmqCi9XIGFoc7XIkSf
98LjvCDdN0pk/heX7yjI9cIZX550M2UWfr+5ckK17zfw6TmtPKLKQrmhpQ3o
9xu690zeWHOKhbEJb+T54TckcN7I7z3DwtbChdyWPz1wr7pl02d1FvJdyp12
DOwBhTC1ux6aLDxysDmSodwDy+4UVOleINcP6lcYT3VDPR7YsUebhRMTr1ze
R3VD2Ip4Z+plFlpU94fnn++Gm+2CLXVXWaiz0VbkM7sb/kv03xdtwMKivi03
3L92wZI94X3fiIXCocYrpO50Qclpu/4TN1gotLnDNFWkC/wERhQETFjIq3bb
ZuWvTtAZ1g/+Z8rCXbfUZo/7dIJYdsPEN3OSLwu16peVO+Gfl+rpF1Ys/Lu3
bqU6Ryd80c2Ovn6PhW3u5rvFMjrg0S5piqwtCwfvxLW2mHfA6cXIS9wPWajZ
Y+xqI9EBGyr4PrY5sFD8e7XXfF87dL324kl2Jvl2a9jcOKId4k0o110es/BT
k97jPL12uHvYOlfTnYW+YqIjLKF2kOce4NvuwcJlIR+fO+e0AVeLjuWcFwvH
dCK6G7AN6uKqv3/3YWHIvQu6vN9aIdROSSzUn4UHMqLWyR5rhRsnMhzMX7KQ
cma44+T3FtjLL9GkGETyn2O05oRGCyz+CZVe95qFTkpOFvvbmqH4C69nfwiL
vN8wTiy72Qy+T91+f3nLQv1jnqLF079A+9I8eEWwUJdw32jk9gtEd5oFXolm
IdPq9POuDb9gZLZrVCqWhXe/rbDYF98En0u1TtATyGMzVTEthSZwCSqLaEhk
4XsH7W2Hfv6EUzdg6X0KCyvWba9uuvMT1h9MOW+XxsIEhfdqost+QidLLPlU
Bskf5Tn3ldGNEPcziEsok/SDeINnnkqNYP2ex3Asi4V3Tr0xfdLdAGjjlFWQ
y8JuRl70lEsDsI9PrgvIJ/XSdLfqm2gD1K6/cedGEQt7Yv5jNZfUw5u+ltJD
pSwMz7+2W+J2PVxPVxNe/p2FPk0DGL66HqTcCh50VLJw3f0vZyU+18G81oGG
lBoW7uQfzEu9WgeFYvGSj+tYSPhN7RJl14H3lOCT840sTDWIeGiSUgsXi/y7
dvxioZrxkZC7OrUg/JI4vNDCwlubu6L2ELUwdM3uRWU7Gf8T/7Bbyg9I3zcy
HNbFQokLXnk3L/8AJ4bBccvfJP5rAxtKuH7AifqGt0f7ST2mbdX3S6+BtZGq
8+sHSX5LZaZmGNZAu1W2xp8hFlpeakvYvboGYpSkP3z9x0Lnpwcf9edUg+Wa
KMJ7nNSHzebm5tvVINfDp6c3xcI1OXnNHJuqgfjo9WXvLAv3adZ+PVVWBTUu
lDXMBdJPvxzIzLGpguBz1rd/LrHw+Lc6TfVtVXBNeKAolsLGg+ongoiESpAc
1xF6SGdj4/tlEMlVCbPfqu+fIdi4jmW+w9m4AvL9lGq3cLHRc+f5ofCi7+Cl
nyExwc3Gvnd5f1aLfofz0hKuRSvYuK/0oXKLSzlsoYa1B65m4/VMrSfLu8tg
sIb34K21bOTzEFH/eqQM0t66+cltYGNar9TN2Xel4GA+P7iCn43MOPWUFlop
qCiYHe3azEatFQ1O9tdKgHdVd8hHITY2Z76bmi0uhtYOrRlXYTZebWCImYgX
Q3RS2dmLYmz0atFRH/UuAnNHiBPfwcZgg2CN95OFcFgthb4kzkZbUe7hRJ1C
YAqJXa7eTa7X/ftjW2EBVI8Epb+TYuOJctk4SckCeJXDs8r6PzbWG3Rk9r7K
B0Nvp5vKMmyUDab5mbDyYfeVyXw+WTZSzno0t937BjO7b2z+e5iNvF/mqToD
efBtqeVuNrJRtHsZJ4duHnhWqlX7HCHXO9FOdv/IBa2Qgh0GR9n44tiA2tYT
uSBkesBl33E2xmSduVJbmAN/5OJbiBPk+fU7hLkVc+Ajj9D+X6fIeg89O5rn
mg32rf7e8Wpkf4fXChV4ZMHxBGLA/hwbiZTUBnj5FVY/tDtyVouc54z4ihNR
mdByciRY+CIbjzBbbnN8/QJRmwwmJ7XZOGphaWXS+Bnu/G04XXKZjct+Vh4I
mcmAQ19V37/SY2PUM0/dYMEMYHhmU24bsjHxCyv9+sl0qNKW1sbrbPQrZ32i
OnyCIPGoj6tukvm4D48bpaeBwTzf8h4Tst8VKekekx9hV7nX9U9mbNxgF8xn
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
//f3Tf8HaMEqJw==
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxF1VO4EAYYx+HTybZ5sm3bPNl1sm3btm0bWxxqyza2uOW2uFV72y528T7/
2+/ie55fUEiX4M6BAQEBoRgf+P+OYyxjGM0oRjKC4QxjKEMYzCAGMoD+9KMv
fehNL3rSg+50oytd+HpAJzrSgfa0oy1taE0rWtKCEJrTjKY0oTGNaEgD6lOP
utShNrWoSTA1qE41qlKFylSiIhUoTznKUobSlKIkJShOMYpShMIUoiAFyE8+
8pKH3OQiJznITjaykoXMZCIjGUhPOtKShtSkIiVBpCA5yUhKEhKTiIQkID7x
iEscYhOLmMQgOtGIShQiE4mIRCA84QhLGEITSCgC+OJhPvOJv/mLj3zgPe94
yxv+5A9e84qXvOA5z3jKE37nNx7ziIc84D73+JVfuMsdbnOLm9zgOte4yhUu
c4mLXOA85zjLGU5zipOc4Gd+4jjH+JEf+J7vOMoRDnOIgxzgW75hP/vYyx52
s4ud7GA729jKFjaziY1sYD3rWMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYz
i5nMYDrTmMoUJjOJiUxgPOMYyxhGM4qRjGA4wxjKEAYziIEMoD/96EsfetOL
nvSgO93oShc604mOdKA97WhLG1rTipa0IITmNKMpTWhMIxrSgPrUoy51qE0t
ahJMDapTjapUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5
yEkOspONrGQhM5nISAbSk460pCE1qUhJEClITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobQBBIq1H/R+GI+84m/+YuPfOA973jLG/7k
D17zipe84DnPeMoTfuc3HvOIhzzgPvf4lV+4yx1uc4ub3OA617jKFS5ziYtc
4DznOMsZTnOKk5zgZ37iOMf4kR/4nu84yhEOc4iDHOBbvmE/+9jLHnazi53s
YDvb2MoWNrOJjWxgPetYyxpWs4qVrGA5y1jKEhaziIUsYD7zmMscZjOLmcxg
OtOYyhQmM4mJTPjaf8YxljGMZhQjGcFwhjGUIQxmEAMZQH/60Zc+9KYXPelB
d7rRlS50phMd6UB72tGWNrSmFS1pQQjNaUZTmtCYRjSkAfWpR13qUJta1CSY
GlSnGlWpQmUqUZEKlKccZSlDaUpRkhIUpxhFKUJhClGQAuQnH3nJQ25ykZMc
ZCcbWclCZjKRkQykJx1pSUNqUpGSIFKQnGQkJQmJSURCEhCfeMQlDrGJRUxi
EJ1oRCUKkYlERCIQnnCEJQyhA/7NfsA/HpQo3g==
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwl1mMbFgYDhuEn17KWbS3btq1l21i2bdu2bdu2jdVWveeO98P54f4F95Wo
YbtKbYMGAoEg1A8WCIw2XoUIBF7yguc84ylPeMwjHvKA+9zjLne4zS1ucoPr
XOMqV7jMJS5ygfOc4yxnOM0pTnKC4xzjKEc4zCEOcoD97GMve9jNLnayg+1s
Yytb2MwmNrKB9axjLWtYzSpWsoLlLGMpS1jMIhaygPnMYy5zmM0sZjKD6Uxj
KlOYzCQmMoHxjGMsYxjNKEYyguEMYyhDGMwgBjKA/vSjL33oTS/+oic96E43
utKFznSiIx1oTzva0obWtKIlLWhOM5rShMY0oiENqE89/qQudahNLWpSg+pU
oypVqEwlKlKB8pSjLGUoTSlKUoLiFKMoRShMIQpSgPzkIy95yE0ucpKD7GQj
K1nITCYykoH0/EE60pKG1KQiJSlITjKSkoTEJCIhCYhPPOISh9jEIiYx+J3o
RCMqUYhMJCISgfCEIyy/EYbQhCIkIQhOMIIShAC/ggcCP/nBv/zDd77xN1/5
wmc+8ZEPvOcdb3nDa17xkhc85xlPecJjHvGQB9znHne5w21ucZMbXOcaV7nC
ZS5xkQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcfe9nDbnaxkx1sZxtb2cJm
NrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNsZjGTGUxnGlOZwmQm
MZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ2968Rc96UF3utGVLnSm
Ex3pQHva0ZY2tKYVLWlBc5rRlCY0phENaUB96vEndalDbWpRkxpUpxpVqUJl
KlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNucpGTHGQnG1nJQmYy
kZEMpOcP0pGWNKQmFSlJQXKSkZQkJCYRCUlAfOIRlzjEJhYxicHvRCcaUYlC
ZCIRkQiEJxxh+Y0whCYUIQlBcIIRlCAE+OW7f/KDf/mH73zjb77yhc984iMf
eM873vKG17ziJS94zjOe8oTHPOIhD7jPPe5yh9vc4iY3uM41rnKFy1ziIhc4
zznOcobTnOIkJzjOMY5yhMMc4iAH2M8+9rKH3exiJzvYzja2soXNbGIjG1jP
OtayhtWsYiUrWM4ylrKExSxiIQuYzzzmMofZzGImM5jONKYyhclMYiITGM84
xjLmv/5iFCMZwXCGMZQhDGYQAxlAf/rRlz70phd/0ZMedKcbXelCZzrRkQ60
px1taUNrWtGSFjSnGU1pQmMa0ZAGwf7fjfX4k7rUoTa1qEkNqlONqlShMpWo
SAXKU46ylKE0pShJCYpTjKIUoTCFKEgB8pOPvOQhN7nISQ6yk42sZCEzmchI
BtLzB+lISxpSk4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMTgd6ITjahEITKR
iEgEwhOOsPxGGEITipCEIDjBCEoQAvzS7T/5wb/8w3e+8Tdf+cJnPvGRD7zn
HW95w+v/+p+XvOA5z3jKEx7ziIc84D73uMsdbnOLm9zgOte4yhUuc4mLXOA8
5zjLGU5zipOc4DjHOMoRDnOIgxxgP/vYyx52s4ud7GA729jKFjaziY1sYD3r
WMsaVrOKlaxgOctYyhIWs4iFLGA+85jLHGYzi5nMYDrTmMoUJjOJiUxgPOMY
yxj+Bwl8098=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwN18MCHQYAAMEX27Zt27Zt22hj27Zt27btNmpjO2k6h/mEPWySpp2qdgwa
CASC0DhYIPAmRCBQMUwgUIHylKMsZShNKUpSguIUoyhFKEwhClKA/OQjL3nI
TS5ykoPsZCMrWchMJjKSgfSkIy1pSE0qUpKC5CQjKUlITCISkoD4xCMucYhN
LGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQjwO3Qg8B+/+MkPvvON
r3zhM5/4yAfe8463vOE1r3jJC57zjH/5h6c84TGPeMjf/MUD7nOPu9zhNre4
yQ2uc42rXOEyl7jIBc5zjrOc4TSnOMkJjnOMoxzhMIc4yAH2s4+97GE3u9jJ
Drazja1sYTOb2MgG1rOOtaxhNatYyQqWs4ylLGExi1jIAuYzj7nMYTazmMkM
pjONqUxhMpOYyATGM46xjGE0oxjJCIYzjKEMYTCDGMgA+tOPvvShN734kz/o
SQ+6042udKEznehIB9rTjra0oTWtaEkLmtOMpjShMY1oSAPqU4+61KE2tahJ
DapTjapUoTKVqEgFylOOspShNKUoSQmKU4yiFKEwhShIAfKTj7zkITe5yEkO
spONrGQhM5nISAbSk460pCE1qUhJCpKTjKQkITGJSEgC4hOPuMQhNrGISQyi
E42oRCEykYhIBMITjrCEITShCEkIghOMoAQhwO9Q+ucXP/nBd77xlS985hMf
+cB73vGWN7zmFS95wXOe8S//8JQnPOYRD/mbv3jAfe5xlzvc5hY3ucF1rnGV
K1zmEhe5wHnOcZYznOYUJznBcY5xlCMc5hAHOcB+9rGXPexmFzvZwXa2sZUt
bGYTG9nAetaxljWsZhUrWcFylrGUJSxmEQtZwHzmMZc5zGYWM5nBdKYxlSlM
ZhITmcB4xjGWMYxmFCMZwXCGMZQhDGYQAxlAf/rRlz70phd/8gc96UF3utGV
LnSmEx3pQHva0ZY2tKYVLWlBc5rRlCY0phENaUB96lGXOtSmFjWpQXWqUZUq
VKYSFalAecpRljKUphQlKUFxilGUIhSmEAUpQH7ykZc85CYXOclBdrKRlSxk
JhMZyUB60pGWNKQmFSlJQXKSkZQkJCYRCUlAfOIRlzjEJhYxiUF0ohGVKEQm
EhGJQHjCEZYwhCYUIQlBcIIRlCAE+B1S//ziJz/4zje+8oXPfOIjH3jPO97y
hte84iUveM4z/uUfnvKExzziIX/zFw+4zz3ucofb3OImN7jONa5yhctc4iIX
OM85znKG05ziJCc4zjGOcoTDHOIgB9jPPvayh93sYic72M42trKFzWxiIxtY
zzrWsobVrGIlK1jOMpayhMUsYiELmM885jKH2cxiJjOYzjSmMoXJTGIiExjP
OMYyhtGMYiQjGM4whjKEwQxiIAPoTz/60ofe9OJP/qAnPehON7rShc50oiMd
aE872tKG1rSiJS1oTjOa0oTGNKIhDahPPepSh9rUoiY1qE41qlKFylSiIhUo
TznKUobSlKIkJShOMYpShMIUoiAFyE8+8pKH3OQiJznITjaykoXMZCIjGUhP
OtKShtSkIiUpSE4ykpKExCQiIQmITzziEofYxCImMYhONKIShchEIiIRCE84
whKG0IQiJCEITjCCEoQAv/3Tf/ziJz/4zje+8oXPfOIjH3jPO97yPz8QtTQ=

            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwN1mOTHgYAhdF3483Gtm27Tc3Yxsa2bdu2bdu2bdtqej6cmecP3JmbMrRF
meZhAoFAEI9EqeBAoECUQCA/+chLHnKTi5zkIDvZyEoWMpOJjGQgPelISxpS
k4qUpCA5yUhKEhKTiIQkID7xiEscYhOLmMQgOtGIShRCiEwwkYhIBMITjrCE
IYgA30MCgf/4xle+8JlPfOQD73nHW97wmle85AXPecZTnvCYRzzkAfe5x13u
cJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5xlGOcJhDHOQA+9nHXvaw
m13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQFy1nGUpawmEUsZAHzmcdc5jCb
WcxkBtOZxlSmMJlJTGQC4xnHWMYwmlGMZATDGcZQhjCYQQxkAP3pR1/60Jte
9KQH3elGV7rQmU50pAPtaUdb2tCaVrSkBc1pRlOa0JhGNKQB9alHXeoQSm1q
UZMaVKcaValCZSpRkQqUpxxlKUNpSlGSEhSnGP/yD3/zF3/yB7/zG7/yCz/z
E0X5kR8oQmEKUZAC5CcfeclDbnKRkxxkJxtZyUJmMpGRDKQnHWlJQ2pSkZIU
JCcZSUlCYhKRkATEJx5xiUNsYhGTGEQnGlGJQgiRCSYSEYlAeMIRljAEEeB7
ZPvnG1/5wmc+8ZEPvOcdb3nDa17xkhc85xlPecJjHvGQB9znHne5w21ucZMb
XOcaV7nCZS5xkQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcfe9nDbnaxkx1s
Zxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNsZjGTGUxn
GlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ2960ZMedKcb
XelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalDKLWpRU1qUJ1q
VKUKlalERSpQnnKUpQylKUVJSlCcYvzLP/zNX/zJH/zOb/zKL/zMTxTlR36g
CIUpREEKkJ985CUPuclFTnKQnWxkJQuZyURGMpCedKQlDalJRUpSkJxkJCUJ
iUlEQhIQn3jEJQ6xiUVMYhCdaEQlCiFEJphIRCQC4QlHWMIQRIDvfs5/fOMr
X/jMJz7ygfe84y1veM0rXvKC5zzjKU94zCMe8oD73OMud7jNLW5yg+tc4ypX
uMwlLnKB85zjLGc4zSlOcoLjHOMoRzjMIQ5ygP3sYy972M0udrKD7WxjK1vY
zCY2soH1rGMta1jNKlayguUsYylLWMwiFrKA+cxjLnOYzSxmMoPpTGMqU5jM
JCYygfGMYyxjGM0oRjKC4QxjKEMYzCAGMoD+9KMvfehNL3rSg+50oytd6Ewn
OtKB9rSjLW1oTSta0oLmNKMpTWhMIxrSgPrUoy51CKU2tahJDapTjapUoTKV
qEgFylOOspShNP8D5sGY8A==
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1tMSHYYCQNET20ajNrZt27Zt27Zt27Zt2zbahs1d92F9wp7ZiRu1r9Qu
aCAQCELdYIFA7vCBwPRIgcA0pjKFyUxiIhMYzzjGMobRjGIkIxjOMIYyhMEM
YiAD6E8/+tKH3vSiJz3oTje60oXOdKIjHWhPO9rShta0oiUtaE4zmtKExjSi
IQ2oTz3qUofa1KImNahONapShcpUoiIVKE85ylKG0pSiJCUoTjGKUoTCFKIg
BchPPvKSh9zkIic5yE42spKFzGQiIxlITzrSkobUpCIlKUhOMpLyF3+ShMQk
IiEJ+IP4xCMucYhNLGISg+hEIypRiEwkIhKB8IQjLGEITShCEoLgBCMoQQjw
O2Ig8B+/+MkPvvONr/zLP/zNFz7ziY984D3veMsbXvOKl7zgOc94yhMe84iH
POA+97jLHW5zi5vc4DrXuMoVLnOJi1zgPOc4yxlOc4qTnOA4xzjKEQ5ziIMc
YD/72MsedrOLnexgO9vYyhY2s4mNbGA961jLGlazipWsYDnLWMoSFrOIhSxg
PvOYyxxmM4uZzGA605jKFCYziYlMYDzjGMsYRjOKkYxgOMMYyhAGM4iBDKA/
/ehLH3rTi570oDvd6EoXOtOJjnSgPe1oSxta04qWtKA5zWhKExrTiIY0oD71
qEsdalOLmtSgOtWoShUqU4mKVKA85ShLGUpTipKUoDjFKEoRClOIghQgP/nI
Sx5yk4uc5CA72chKFjKTiYxkID3pSEsaUpOKlKQgOclIyl/8SRISk4iEJOAP
4hOPuMQhNrGISQyiE42oRCEykYhIBMITjrCEITShCEkIghOMoAQhwO8I+ucX
P/nBd77xlX/5h7/5wmc+8ZEPvOcdb3nDa17xkhc85xlPecJjHvGQB9znHne5
w21ucZMbXOcaV7nCZS5xkQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcfe9nD
bnaxkx1sZxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNs
ZjGTGUxnGlOZwmQmMZEJjGccYxnDaEYxkhEMZxhDGcJgBjGQAfSnH33pQ296
0ZMedKcbXelCZzrRkQ60px1taUNrWtGSFjSnGU1pQmMa0ZAG1KcedalDbWpR
kxpUpxpVqUJlKlGRCpSnHGUpQ2lKUZISFKcYRSlCYQpRkALkJx95yUNucpGT
HGQnG1nJQmYykZEMpCcdaUlDalKRkhQkJxlJ+Ys/SUJiEpGQBPxBfOIRlzjE
JhYxiUF0ohGVKEQmEhGJQHjCEZYwhCYUIQlBcIIRlCAE+O0x/+MXP/nBd77x
lX/5h7/5wmc+8ZEPvOcdb3nDa17xkhc85xlPecJjHvGQB9znHne5w21ucZMb
XOcaV7nCZS5xkQuc5xxnOcNpTnGSExznGEc5wmEOcZAD7Gcfe9nDbnaxkx1s
Zxtb2cJmNrGRDaxnHWtZw2pWsZIVLGcZS1nCYhaxkAXMZx5zmcNsZjGTGf//
f6YxlSlMZhITmcB4xjGWMYxmFCMZwXCGMZQhDGYQAxlAf/rRlz70phc96UF3
utGVLnSmEx3pQHva0ZY2tKYVLWlBc5rRlCY0phENaUB96lGXOtSmFjWpQXWq
UZUqVKYSFalAecpRljKUphQlKUFxilGUIhSmEAUpQH7ykZc8/A96edPu
            
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwV1tMSHYYCQNETNLZt27Zt20ZjO22MNrZt27Zt21Zz131Yn7BnduImHat0
CBoIBIJQLlggMD1iIPAoSiDwkAfc5x53ucNtbnGTG1znGle5wmUucZELnOcc
ZznDaU5xkhMc5xhHOcJhDnGQA+xnH3vZw252sZMdbGcbW9nCZjaxkQ2sZx1r
WcNqVrGSFSxnGUtZwmIWsZAFzGcec5nDbGYxkxlMZxpTmcJkJjGRCfzLP4xn
HGMZw2hGMZIRDGcYf/MXQxnCYAYxkAH0px996UNvetGTHnSnG13pQmc68Scd
6UB72tGWNrSmFS1pQXOa0ZQmNKYRDWlAfepRlzrUphY1qUF1qlGVKlSmEhWp
QHnKUZYylKYUJSlBcYpRlCIUphAFKUB+8pGXPOQmFznJQXaykZUsZCYTGclA
etKRljSkJhUpSUFykpGUJCQmEQlJQHziEZc4xCYWMYlBdKIRlShEJhIRiUB4
whGWMIQmFCEJwR8EJxhBCUKA35EDgf/4xU9+8J1vfOULn/nERz7wnne85Q2v
ecVLXvCcZzzlCY95xEMecJ973OUOt7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbWxlC5vZxEY2sJ51rGUNq1nF
SlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCbwL/8wnnGMZQyj
GcVIRjCcYfzNXwxlCIMZxEAG0J9+9KUPvelFT3rQnW50pQud6cSfdKQD7WlH
W9rQmla0pAXNaUZTmtCYRjSkAfWpR13qUJta1KQG1alGVapQmUpUpALlKUdZ
ylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQkA+lJR1rS
kJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQ
mlCEJAR/EJxgBCUIAX5H0j+/+MkPvvONr3zhM5/4yAfe8463vOE1r3jJC57z
jKc84TGPeMgD7nOPu9zhNre4yQ2uc42rXOEyl7jIBc5zjrOc4TSnOMkJjnOM
oxzhMIc4yAH2s4+97GE3u9jJDrazja1sYTOb2MgG1rOOtaxhNatYyQqWs4yl
LGExi1jIAuYzj7nMYTazmMkMpjONqUxhMpOYyAT+5R/GM46xjGE0oxjJCIYz
jL/5i6EMYTCDGMgA+tOPvvShN73oSQ+6042udKEznfiTjnSgPe1oSxta04qW
tKA5zWhKExrTiIY0oD71qEsdalOLmtSgOtWoShUqU4mKVKA85ShLGUpTipKU
oDjFKEoRClOIghQgP/nISx5yk4uc5CA72chKFjKTiYxkID3pSEsaUpOKlKQg
OclIShISk4iEJCA+8YhLHGITi5jEIDrRiEoUIhOJiEQgPOEISxhCE4qQhOAP
ghOMoAQhwG9v/h+/+MkPvvONr3zhM5/4yAfe8463vOE1r3jJC57zjKc84fH/
/5+HPOA+97jLHW5zi5vc4DrXuMoVLnOJi1zgPOc4yxlOc4qTnOA4xzjKEQ5z
iIMcYD/72MsedrOLnexgO9vYyhY2s4mNbGA961jLGlazipWsYDnLWMoSFrOI
hSxgPvOYyxxmM4uZzOB/uvDwlA==
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl1vO7EAYYBeDbzbZ5s23bvNl1M2+2bdu15bawZRtbbotbtttqy3t79sP7
nL/gO+cLCgkN7homICBgYmBAwLcUAWEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJJUBJGaNKQlHenJQEYykZksZCUb2clBTnKRmzzk
JR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFNahFMbepQ
l3rUpwENaURjmtCUZjSnBS0JoRWtaUNb2tGeDnSkE53pQldC6UZ3etCTXvSm
D33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZzGYO
c5nHfBawkEUsZglLWcZyVvAd37OSVaxmDWtZx3o28AM/spFNbGYLP/EzW9nG
dnawk13sZg972cd+DnCQQxzmCEc5xnFOcJJT/MKvnOYMZznHeS5wkUv8xu9c
5gpXucZ1bvAHf3KTW9zmDne5x30e8JBHPOYJT3nGc17wkle85g1/8Tdvecc/
/Mt7PvCRT3zmC1/5dvxhCCQs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwIS
kojEJCEpyUhOClKSiiBSk4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUo
SCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWoSS2CqU0d6lKP+jSg
IY1oTBOa0ozmtKAlIbSiNW1oSzva04GOdKIzXfhW3qF0ozs96EkvetOHvvSj
PwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOYySxmM4e5zGM+
C1jIIhazhKUsYzkr+I7vWckqVrOGtaxjPRv4gR/ZyCY2s4Wf+JmtbGM7O9jJ
Lnazh73sYz8HOMghDnOEoxzjOCc4ySl+4VdOc4aznOM8F7jIJX7jdy5zhatc
4zo3+IM/ucktbnOHu9zjPg94yCMe84SnPOM5L3jJK17zhr/4m7e84x/+5T0f
+MgnPvOFr3wb/jAEEpZwhCcCEYlEZKIQlWhEJwYxiUVs4hCXeMQnAQlJRGKS
kJRkJCcFKUlFEKlJQ1rSkZ4MZCQTmclCVrKRnRzkJBe5yUNe8pGfAhSkEIUp
QlGKUZwSlKQUpSlDWcpRngpUpBKVqUJVqlGdGtSkFsHUpg51qUd9GtCQRjSm
CU1pRnNa0JIQWtGaNrSlHe3pQEc60ZkudCWUbnSnBz3pRW/60Jd+9GcAAxnE
YIYwlGEMZwQjGcVoxjCWcYxnQuD/v+J/yTYpag==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl08OyIAgCAME3bdu2bWPatm3b9rRt27Zt27Ztb0bsIb+gohI2bFex7T8B
AQENAwcEjAoUEDCaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc8
5RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xmz/8JUDTfwhEYIIQlGAE
JwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMYlFbOIQl3jEJwEJSURikpCUZCQn
BSlJRWrSkJZ0pCcDGclEZrKQlWxkJwc5yUVu8pCXfOSnAAX5l0IUpghFKUZx
SlCSUpSmDGUpR3kqUJFKVKYKValGdWpQk1rUpg51qUd9GgT+/1uNaEwTmtKM
5rSgJa1oTRva0o72dKAjnehMF7rSje70oCe96E0f+tKP/gxgIIMYzBD+YyjD
GM4IRjKK0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctY
zgpWsorVrGEt61jPBjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjO
CU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc84SnPeM4L
XvKK17zhLe94zwc+8onPfOEr3/jOD37yi9/84S8BQfxPIAIThKAEIzghCEko
QhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpS
k4a0pCM9GchIJjKThaxkIzs5yEkucpOHvOQjPwUoyL8UojBFKEoxilOCkpSi
NGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSiMU1oSjOa04KWtKI1
bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQ/iPoQxjOCMYyShG
M4axjGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlaz
hrWsYz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOG
s5zjPBe4yCUuc4WrXOM6N7jJLW5zh7vc4z4PeMgjHvOEpzzjOS94ySte84a3
vOM9H/jIJz7zha984zs/+MkvfvOHvwQE9T+BCEwQghKM4IQgJKEITRjCEo7w
RCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozkpCAlqUhNGtKSjvRk
ICOZyEwWspKN7OQgJ7nITR7yko/8FKAg/1KIwhShKMUoTglKUorSlKEs5ShP
BSpSicpUoSrVqE4NalKL2tShLvWoTwMa0ojGNKEpzWhOC1rSita0oS3taE8H
OtKJznShK93oTg960ove9KEv/ejPAAYyiMEM4T+GMozhjGAkoxjNGMYyjvFM
YCKTmMwUpjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWrWM0a1rKO9Wxg
I5vYzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4zRnOco7zXOAi
l7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8oznvOAlr3jN/wCxvNVf
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwN02MDFQYAAMC3bNu2bdu2W7Zt2za3bNtYtq0t27X7cD/hEjfpUKX9H4FA
oEnQQOBV8EDgNW94yzve84GPfOIzX/jKN77zg5/84jeBEIHAHwQhKMEITghC
EorQhCEs4QhPBCISichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKS
itSkIS3pSE8GMpKJzGQhK9nITg5ykovc5CEv+chPAQpSiMIUoSjFKE4JSlKK
0pShLOUoTwUqUonKVKEq1ahODWpSi9rUoS71qE8DGtKIxjShKX/SjOa0oCWt
aE0b2tKO9nSgI53oTBe60o3u9KAnvehNH/rSj/4MYCCDGMwQhjKM4YxgJKMY
zRjGMo7xTGAik5jMFKYyjenMYCazmM0c5jKP+SxgIYtYzBKWsozl/MXfrGAl
q1jNGtayjvVsYCOb2MwWtrKN7exgJ7vYzR72so/9HOAghzjMEY5yjOOc4CT/
cIrTnOEs5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEpz/iX/3jO
C17yite84S3veM8HPvKJz3zhK9/4zg9+8ovfBEL6TxCCEozghCAkoQhNGMIS
jvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhMEpKSjOSkICWpSE0a0pKO
9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa8ifNaE4LWtKK1rShLe1o
Twc60onOdKEr3ehOD3rSi970oS/96M8ABjKIwQxhKMMYzghGMorRjGEs4xjP
BCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jOX/zNClayitWsYS3r
WM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTvIPpzjNGc5y
jvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjH/5j+e84CWveM0b
3vKO93zgI5/4zBe+8o3v/OAnv/hNIJT/BCEowQhOCEISitCEISzhCE8EIhKJ
yEQhKtGITgxiEovYxCEu8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonM
ZCEr2chODnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpU
oSrVqE4NalKL2tShLvWoTwMa0ojGNKEpf9KM5rSgJa1oTRva0o72dKAjnehM
F7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjGAkoxjNGMYyjvFMYCKTmMwU
pjKN6cxgJrOYzRzmMo/5LGAhi1jMEpayjOX8xd+sYCWrWM0a1rKO9WxgI5vY
zBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJP9witOc4SznOM8FLnKJ
y1zhKte4zg1ucovb3OEu97jPAx7yiMc84SnP+Jf/eM4LXvKK17zhLe94zwc+
8onPfOEr3/jOD37yi98EQvtPEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3o
xCAmsYhNHOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezk
ICe5yE0e8pKP/BSgIIUoTBGKUozilKAkpShNGcpSjvJUoCL/A3Xftn8=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwN0+NiHgYAAMBvddPUtm17drHaTM3Utm3btm3btm1z9+Me4VKGhJZp/kMg
EHgUJhAoFTkQKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNCHWoSz3q04CGNKIx
TWhKM5oTSgta0orWtKEt7WhPBzrSic50oSvd6E4PetKL3vShL/3ozwAGMojB
DGEowxjOCEYyitGMYSzjGM8EJjKJyUxhKtOYzgxmMovZzGEu85jPAhayiMUs
YSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93sYS/72M8BDnKIwxzh
KMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEp
z3jOC17yite84S3veM8HPvKJz3zhK9/4TiAoEPiBMIQlHOGJQEQiEZkgohBM
VKIRnRjEJBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJW
spGdHOQkF7nJQ17ykZ8CFKQQhSlCUX7kJ37mF37lN37nD/7kL/7mH/6lGMUp
QUn+oxSlKUNZylGeClSkEpWpQlWqUZ0a1KQWtQmhDnWpR30a0JBGNKYJTWlG
c0JpQUta0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAGMZghDGUY
wxnBSEYxmjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnL
WcFKVrGaNaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5
wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nB
S17xmje85R3v+cBHPvGZL3zlG98JRPGfMIQlHOGJQEQiEZkgohBMVKIRnRjE
JBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJWspGdHOQk
F7nJQ17ykZ8CFKQQhSlCUX7kJ37mF37lN37nD/7kL/7mH/6lGMUpQUn+oxSl
KUNZylGeClSkEpWpQlWqUZ0a1KQWtQmhDnWpR30a0JBGNKYJTWlGc0JpQUta
0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAGMZghDGUYwxnBSEYx
mjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGa
NaxlHevZwEY2sZktbGUb29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoz
nOUc57nARS5xmStc5RrXucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje8
5R3v+cBHPvGZL3zlG98JBPtPGMISjvBEICKRiEwQUQgmKtGITgxiEovYxCEu
8YhPAhKSiMQkISnJSE4KUpKK1KQhLelITwYykonMZCEr2chODnKSi9zkIS/5
yE8BCvI/w5WZNA==
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwN02OjEAYAAMC3bHPZdi3btm3btm3btm3btm3X7sP9hEvQoG2FNv8EBATU
DRwQkCNMQEBOcpGbPOQlH/kpQEEKUZgiFKUYxSlBSUpRmjKUpRzlqUBFKlGZ
KlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0pRnNaUFLWtGaNrSlHe3pQEc60Zku
dKUb3elBT3rRmz70pR/9GcBABjGYIQxlGMMZwUhGMZoxjGUc45nARCYxmSlM
ZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlaxmjWsZR3r2cBGNrGZLWxl
G9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa
17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7xmS985Rvf
+cFPfvGbP/wlIGxAwD8EIjBBCEowghOCkIQiNGEISzjCE4GIRCIyUYhKNKIT
g5j8SyxiE4e4xCM+CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4X/yEo2
spODnOQiN3nISz7yU4CCFKIwRShKMYpTgpKUojRlKEs5ylOBilSiMlWoSjWq
U4Oa1KI2dahLPerTgIY0ojFNaEozmtOClrSiNW1oSzva04GOdKIzXehKN7rT
g570ojd96Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjOD
mcxiNnOYyzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od
7GI3e9jLPvZzgIMc4jBHOMoxjnOCk5ziNGc4yznOc4GLXOIyV7jKNa5zg5vc
4jZ3uMs97vOAhzziMU94yjOe84KXvOI1b3jLO97zgY984jNf+Mo3vvODn/zi
N3/4S0A4/wlEYIIQlGAEJwQhCUVowhCWcIQnAhGJRGSiEJVoRCcGMfmXWMQm
DnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6MpCRTGQmC/+RlWxkJwc5yUVu
8pCXfOSnAAUpRGGKUJRiFKcEJSlFacpQlnKUpwIVqURlqlCValSnBjWpRW3q
UJd61KcBDWlEY5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQ
l370ZwADGcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCX
ecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd9
7OcABznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc
5wEPecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/vCXgPD+
E4jABCEowQhOCEISitCEISzhCE8EIhKJyEQhKtGITgxi8i+xiE0c4hKP+CQg
IYlITBKSkozkpCAlqUhNGtKSjvRkICOZyEwW/iMr2chODnKSi9zkIS/5yE8B
ClKIwhShKMUoTglKUorSlKEs5ShPBSpSicpUoSrVqE4NalKL2tShLvWoTwMa
0ojGNKEpzWhOC1rSita0oS3taE8HOtKJznShK93oTg960ove9KEv/ejPAAYy
iMEMYSjDGM4IRjKK0YxhLOMYzwQmMonJTGEq0/gf9kPU2w==
          "]]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwN02OjEAYAAMC3XMtctm3btm3btm3btm3btm3X7sP9hIvfoG2FNv8EBASU
CRwQMD1cQMAMZjKL2cxhLvOYzwIWsojFLGEpy1jOClayitWsYS3rWM8GNrKJ
zWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4JTnKK05zhLOc4zwUuconL
XOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte8orXvOEt73jPBz7yic98
4Svf+M4PfvKL3/zhLwHhAwL+IRCBCUJQghGcEIQkFP8SmjCEJRzhiUBEIhGZ
KEQlGv8RnRjEJBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZ
yUJWspGdHOQkF7nJQ17ykZ8CFKQQhSlCUYpRnBKUpBSlKUNZylGeClSkEpWp
QlWqUZ0a1KQWtalDXepRnwY0pBGNaUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelC
V7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJU
pjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2
sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5x
nRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGd
H/zkF7/5w18CIvhPIAIThKAEIzghCEko/iU0YQhLOMITgYhEIjJRiEo0/iM6
MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4a0pCM9GchIJjKThaxkIzs5
yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOFqlSjOjWo
SS1qU4e61KM+DWhIIxrThKY0ozktaEkrWtOGtrSjPR3oSCc604WudKM7PehJ
L3rTh770oz8DGMggBjOEoQxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMks
ZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWsYz0b2MgmNrOFrWxjOzvYyS52
s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUuc4WrXOM6N7jJLW5z
h7vc4z4PeMgjHvOEpzzjOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvfvOH
vwRE9J9ABCYIQQlGcEIQklD8S2jCEJZwhCcCEYlEZKIQlWj8R3RiEJNYxCYO
cYlHfBKQkEQkJglJSUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg95
yUd+ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1alCTWtSmDnWp
R30a0JBGNKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd60JNe9KYPfelH
fwYwkEEMZghDGcZwRjCSUYxmDGMZx3gmMJFJTGYKU5nGdGYwk1nMZg5zmcd8
FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2cZ2drCTXexmD3vZx34O
cJBDHOYIRznGcU5wklOc5gxnOcd5LnCRS1zmCle5xnVucJNb3OYOd7nHfR7w
kEc85gn/AzJz8jQ=
          "]]}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {1.7115, 0}, 
     PlotRange -> {{1.7, 4}, {0, 2.81190675937083}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)(score)\"", 
        TraditionalForm], None}, AxesOrigin -> {1.7115, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
     FormBox[
      "\"Smooth Histogram of the score per board size \"", TraditionalForm], 
     PlotRange -> {{1.7, 4}, {0, 2.81190675937083}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Black Score\"", "\"White Score\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6657631198025084`*^9, 3.665763124873461*^9}, {
   3.665763209632629*^9, 3.6657633359365273`*^9}, {3.6657634030212603`*^9, 
   3.665763433311466*^9}, {3.665763475448771*^9, 3.665763515050962*^9}, 
   3.665763546713608*^9, {3.665763605277582*^9, 3.665763661888994*^9}, {
   3.6657637258598843`*^9, 3.6657637815192413`*^9}}],

Cell[BoxData["\<\"r2.eps\"\>"], "Output",
 CellChangeTimes->{{3.6657631198025084`*^9, 3.665763124873461*^9}, {
   3.665763209632629*^9, 3.6657633359365273`*^9}, {3.6657634030212603`*^9, 
   3.665763433311466*^9}, {3.665763475448771*^9, 3.665763515050962*^9}, 
   3.665763546713608*^9, {3.665763605277582*^9, 3.665763661888994*^9}, {
   3.6657637258598843`*^9, 3.665763782057993*^9}}]
}, Open  ]]
},
WindowSize->{783, 756},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 36, "Input"],
Cell[752, 27, 133, 2, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[922, 34, 335, 7, 36, "Input"],
Cell[1260, 43, 73, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370, 49, 771, 20, 57, "Input"],
Cell[2144, 71, 7114, 178, 299, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9295, 254, 365, 8, 36, "Input"],
Cell[9663, 264, 272, 4, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9972, 273, 609, 17, 78, "Input"],
Cell[10584, 292, 5269, 135, 299, "Output"]
}, Open  ]],
Cell[15868, 430, 309, 6, 36, "Input"],
Cell[CellGroupData[{
Cell[16202, 440, 688, 18, 78, "Input"],
Cell[16893, 460, 576, 8, 35, "Output"],
Cell[17472, 470, 576, 8, 35, "Output"]
}, Open  ]],
Cell[18063, 481, 83, 1, 36, "Input"],
Cell[CellGroupData[{
Cell[18171, 486, 571, 17, 57, "Input"],
Cell[18745, 505, 412, 8, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19194, 518, 784, 18, 35, "Input"],
Cell[19981, 538, 741, 11, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20759, 554, 697, 19, 57, "Input"],
Cell[21459, 575, 48881, 852, 329, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70377, 1432, 613, 18, 57, "Input"],
Cell[70993, 1452, 5490, 138, 295, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76520, 1595, 598, 18, 57, "Input"],
Cell[77121, 1615, 510, 8, 35, "Output"]
}, Open  ]],
Cell[77646, 1626, 439, 12, 78, "Input"],
Cell[CellGroupData[{
Cell[78110, 1642, 658, 17, 57, "Input"],
Cell[78771, 1661, 1072, 29, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79880, 1695, 1727, 43, 183, "Input"],
Cell[81610, 1740, 38616, 870, 341, "Output"],
Cell[120229, 2612, 401, 6, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120667, 2623, 1983, 54, 199, "Input"],
Cell[122653, 2679, 143152, 2465, 309, "Output"],
Cell[265808, 5146, 383, 5, 36, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
