(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     77487,       1676]
NotebookOptionsPosition[     75957,       1617]
NotebookOutlinePosition[     76309,       1633]
CellTagsIndexPosition[     76266,       1630]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.66550633122519*^9, 3.665506338800968*^9}}],

Cell[BoxData["\<\"/Users/poincare/Dropbox/Documentos/DMKM/02 \
Lyon/CMS/PR\"\>"], "Output",
 CellChangeTimes->{3.665506339564541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\<exp2.xlsx\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"Length", "[", "exp", "]"}]}]], "Input",
 CellChangeTimes->{{3.665506341586244*^9, 3.665506366879055*^9}, 
   3.665507102937612*^9, {3.665509480107182*^9, 3.6655094823229017`*^9}}],

Cell[BoxData["1089"], "Output",
 CellChangeTimes->{3.665509483176444*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tally", "[", "exp", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{
      RowBox[{"Tally", "[", "exp", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "1089", " ", "Tries", " ", "in", " ", "a", " ", "9", "x9", " ", "size"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.665506368042225*^9, 3.665506378421424*^9}, {
  3.665506690216901*^9, 3.66550672061477*^9}, {3.665506752773644*^9, 
  3.665506802041403*^9}, {3.665507285037897*^9, 3.665507308530128*^9}, {
  3.6655087804114122`*^9, 3.665508803867815*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.48597994530537825`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6789999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 541.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.133729962573256`, 
           126.566885294027}, {-101.87964913332087`, 95.26352218621435}}],
         StatusArea[#, 541]& ,
         TagBoxNote->"541"],
        StyleBox["541", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[541, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 547.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{135.760401361178, 
           236.19355669263172`}, {-104.06053458233603`, 95.26352218621435}}],
         StatusArea[#, 547]& ,
         TagBoxNote->"547"],
        StyleBox["547", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[547, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{245.38707275978277`, 345.82022809123646`}, {
           94.40004127804515, 95.26352218621435}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.544211485870556, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 0.}]}], 
         LineBox[{{3.455788514129444, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
            0.}]}], {{}, {}, {}, {
           LineBox[{{1.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.455788514129444, 
              0.}]}], LineBox[{{1.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.544211485870556, 
              0.}]}], LineBox[{{2.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.455788514129444, 
              0.}]}], LineBox[{{2.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.544211485870556, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks  wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites  wins\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Tie  wins\"\>", Offset[{0., -2.}, {3., 0.}], {0, 1}, 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.48597994530537825`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks  wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites  wins\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Tie  wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.665506371033051*^9, 3.665506378965507*^9}, 
   3.66550641375465*^9, {3.6655065729453783`*^9, 3.665506601929317*^9}, {
   3.6655066860747137`*^9, 3.665506720917572*^9}, {3.665506753243643*^9, 
   3.665506802526675*^9}, 3.665506845029008*^9, 3.665506931716157*^9, {
   3.665506964874015*^9, 3.665506979082341*^9}, 3.665507104204183*^9, 
   3.66550717646212*^9, {3.6655072815327873`*^9, 3.6655073088944597`*^9}, 
   3.665507365889553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp4", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\<exp3.xlsx\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"Length", "[", "exp4", "]"}]}]], "Input",
 CellChangeTimes->{{3.6655090042564087`*^9, 3.665509006485896*^9}, {
  3.665509488577097*^9, 3.6655094909203987`*^9}, {3.665509686790695*^9, 
  3.665509697002138*^9}}],

Cell[BoxData["570"], "Output",
 CellChangeTimes->{{3.665509491423113*^9, 3.6655095083869057`*^9}, {
   3.665509697597197*^9, 3.6655097103122787`*^9}, 3.665510171622854*^9, 
   3.665518431361672*^9, 3.6655188104948893`*^9, 3.6655619848034077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tally", "[", "exp4", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{
      RowBox[{"Tally", "[", "exp4", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"19", "x19"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.665509013903846*^9, 3.665509015645623*^9}, {
  3.665509633484962*^9, 3.665509638851931*^9}, {3.66550969202107*^9, 
  3.665509694118886*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5064116575591986, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5446265938069217, 0.}, {1.4553734061930783`, 265.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.133729962573256`, 
           178.77219427556813`}, {-77.98524844875564, 95.26352218621432}}],
         StatusArea[#, 265]& ,
         TagBoxNote->"265"],
        StyleBox["265", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[265, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5446265938069217`, 0.}, {2.455373406193078, 305.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{193.18176377824162`, 
           345.82022809123646`}, {-104.060534582336, 95.26352218621432}}],
         StatusArea[#, 305]& ,
         TagBoxNote->"305"],
        StyleBox["305", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[305, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.5064116575591986, 0.}, {2.4943526411657557`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5446265938069217, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5446265938069217, 0.}]}],
          LineBox[{{2.455373406193078, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.455373406193078, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4553734061930783`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4553734061930783`, 
              0.}]}], LineBox[{{1.5446265938069217`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5446265938069217`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks  wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites  wins\"\>", 
           Offset[{0., -2.}, {1.9999999999999998`, 0.}], {0, 1}, Automatic, {
           1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5064116575591986, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks  wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites  wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.6655090174424257`*^9, 3.665509187874049*^9, 3.6655093663367357`*^9, 
   3.6655094710037403`*^9, 3.6655095092150908`*^9, {3.665509699061728*^9, 
   3.665509711682056*^9}, 3.6655101730778847`*^9, 3.665518432200453*^9, 
   3.665518811401883*^9, 3.6655619858323507`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hist1", "=", 
   RowBox[{"Import", "[", "\"\<hist1.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665562173049046*^9, 3.665562195422871*^9}, 
   3.665562300463366*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"hist1", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ";", 
  RowBox[{"N", "[", 
   RowBox[{"Mean", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.665562301674921*^9, 3.665562323977044*^9}, {
  3.6655626016376266`*^9, 3.665562618973947*^9}}],

Cell[BoxData["273.73`"], "Output",
 CellChangeTimes->{{3.6655626146591187`*^9, 3.665562619658104*^9}, 
   3.6655631059369917`*^9, 3.665563500698254*^9, 3.66556358815171*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StudentTCI", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"StandardDeviation", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", "1"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665562465208153*^9, 3.665562528670368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"51.15527160392466`", ",", "496.30472839607535`"}], "}"}]], "Output",\

 CellChangeTimes->{3.665562500712595*^9, 3.665562533751828*^9, 
  3.665562603711054*^9, 3.665563111976756*^9, 3.6655635032821207`*^9, 
  3.665563589944406*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocationTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665562655173931*^9, 3.665562661179215*^9}, {
  3.665562692013898*^9, 3.665562701698183*^9}, {3.665563148213397*^9, 
  3.665563191299259*^9}, {3.6655633645039997`*^9, 3.665563365334529*^9}, {
  3.665563522081296*^9, 3.665563526857325*^9}}],

Cell[BoxData["0.0019627113939595904`"], "Output",
 CellChangeTimes->{
  3.665562661550383*^9, 3.665562702196252*^9, 3.665563117853347*^9, {
   3.665563150071553*^9, 3.665563191721943*^9}, 3.6655633659019117`*^9, {
   3.665563505799375*^9, 3.6655635276770687`*^9}, 3.665563590884326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Black Score\>\"", ",", "\"\<White Score\>\""}], "}"}], 
      ",", "Below"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6655628752866163`*^9, 3.6655628798427258`*^9}, {
  3.665563211434945*^9, 3.6655632224809103`*^9}, {3.665563383558653*^9, 
  3.665563413725334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxde3c4l2/YvlVSSkKRbMqMiETu+7Izsvfe+2Pv7WNv2TSNZJTkqyQyQoWU
pBKZIStCSBmv9zh+v3/e55/nOI/7uq7zPM77Gdf9x8Vh46FjT0ZCQpJITkLy
v/eMOrmlF1WXW0n+3/V/cfZe6yAhQ7KV6BoTFhLYiPJVcTuL36XWJvs1ob9x
zSg/58XDXmOJ1n70dyp2qRXdHJfOD0PirSn8YxEXWl+iuwLPiUJcF1v7fXp0
2Rs70F1/ScIIpVhrSprFydrJV6i07alh6uKFVpev3QM7l7tQObW4nMwHkVaS
BPZIm44epPXIwXjIVbiV84H8147Yd8hI0fa8lLhQ60+fbDGJtj5kNWxJXrjL
3/prjIvT37IfOXmZDW695m09cv0XKRn7AHKiNH5ofP1sa+0Fs9WqA5+R5y19
YoMJd+uzr9JqFnSDKFBMx5CJm7O1ajN4VFd9CP3KvGW0OsTWunOimo+m7hsi
acklqyUwt35Yl/Anaoyh4wvpD7xITrVuS1uabtNMoOOnEg0uZJ1oJZTa6Cbn
TiKIoyCdVKNutQw6whYoM4WsRjf0rL3IW0eQ9doNyhnU6tav3Sa03rKlu+U4
s/kDkcw+693r7GnJddx51kU7jyLt3zQRAxexBOcRuiKjRdRKjHgqt7KHHbzv
BJr1LSFwvkbJ+fEQXHV6IpzS/AtlJDw0/vD5ONQNLs1VXFhFGWZ1j2gVGGB5
xtz1e/saihRpPKDzmAkO3tQIeBqwjjwpXppmsrLCiYry/G7NTSTiNmU0p8gB
8uWj1JsaW0jk84/oxFAuuL46EXc58B/ihYVqvv944ClVS2/Gux3EXrn0tWvu
HHxbwlXF/CSYnX6VwoWdH2RFiqY/xZNixvB14cOGgjD873hiLgk5Pj77x6Qy
9TzUbMXt3s+lwIf4duV4bERAUK9p9qvaQUwxGmHkF3YBBPKNy3Y5DmGSLFL3
znxROEvx7t7s6cOY5Gp0NEOdGAQMnLH1lqTG29sUBfbvL0KBUx3BN/QY/vM4
rvrJvDgI3V0rNPc9jn87HOo4cPASaHM3PY1vocW/mZO+6nNIgn36x6Ucdjr8
q+/I8r0rlwEdWjKyzKfHi7GpFBuGUpB6xcn70bmTeFGK5rSSjzR8d9qhVHx/
Cs8uZwjnpl2BjjdP8z6mM+Gp0hOKMxUyEIAN3m85M+Mp42wTiU4EAUalxuoW
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
D7meIU8=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
18nC//s/6x9tb3CaV/7/4/8BZd1ZGg==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-25.670866862569312`, 972.5641761275473}, {
       0, 0.0038307094581657474`}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-25.670866862569312`, 972.5641761275473}, {
       0, 0.0038307094581657474`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Black Score\"", "\"White Score\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.665562880341054*^9, 3.665563120326542*^9, {3.665563212086795*^9, 
   3.665563223012986*^9}, {3.6655634052751703`*^9, 3.665563414230522*^9}, {
   3.665563509211783*^9, 3.665563529500269*^9}, 3.665563591954049*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{
     RowBox[{"Tally", "[", 
      RowBox[{"hist1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665563245845797*^9, 3.665563322199938*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.48597994530537825`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6789999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 1169.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{31.039574653390762`, 
           129.99878964072278`}, {-102.55527116744622`, 93.8362773891786}}],
         StatusArea[#, 1169]& ,
         TagBoxNote->"1169"],
        StyleBox["1169", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1169, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 1025.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{139.04933349449396`, 
           238.00854848182595`}, {-78.42491788074477, 93.8362773891786}}],
         StatusArea[#, 1025]& ,
         TagBoxNote->"1025"],
        StyleBox["1025", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1025, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 6.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{247.05909233559717`, 346.0183073229292}, {
           92.33084600223272, 93.8362773891786}}],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.544211485870556, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 0.}]}], 
         LineBox[{{3.455788514129444, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
            0.}]}], {{}, {}, {}, {
           LineBox[{{1.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.455788514129444, 
              0.}]}], LineBox[{{1.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.544211485870556, 
              0.}]}], LineBox[{{2.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.455788514129444, 
              0.}]}], LineBox[{{2.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.544211485870556, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks-wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites-wins\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Tie-wins\"\>", Offset[{0., -2.}, {3., 0.}], {0, 1}, 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.48597994530537825`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks-wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites-wins\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Tie-wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.665563275299705*^9, 3.66556332268801*^9}, {
   3.665563511379821*^9, 3.6655635315711393`*^9}, 3.665563595920815*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Tally", "[", 
      RowBox[{"hist1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66556355148997*^9, 3.665563558479162*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.5313636363636364`", ",", "0.4659090909090909`", ",", 
   "0.0027272727272727275`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6655635481111717`*^9, 3.6655635587100058`*^9}, 
   3.66556359973845*^9}]
}, Open  ]]
},
WindowSize->{783, 856},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 28, "Input"],
Cell[752, 27, 133, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[922, 34, 335, 7, 28, "Input"],
Cell[1260, 43, 73, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370, 49, 771, 20, 46, "Input"],
Cell[2144, 71, 7089, 178, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9270, 254, 365, 8, 28, "Input"],
Cell[9638, 264, 246, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9921, 272, 609, 17, 46, "Input"],
Cell[10533, 291, 5240, 135, 241, "Output"]
}, Open  ]],
Cell[15788, 429, 213, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[16026, 438, 398, 11, 28, "Input"],
Cell[16427, 451, 173, 2, 28, "Output"]
}, Open  ]],
Cell[16615, 456, 83, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[16723, 461, 571, 17, 46, "Input"],
Cell[17297, 480, 270, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17604, 491, 585, 15, 28, "Input"],
Cell[18192, 508, 286, 4, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18515, 517, 697, 19, 46, "Input"],
Cell[19215, 538, 48420, 847, 271, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67672, 1390, 613, 18, 46, "Input"],
Cell[68288, 1410, 6773, 173, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75098, 1588, 598, 18, 28, "Input"],
Cell[75699, 1608, 242, 6, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
