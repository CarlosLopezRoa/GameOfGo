(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     79007,       1683]
NotebookOptionsPosition[     77436,       1623]
NotebookOutlinePosition[     77788,       1639]
CellTagsIndexPosition[     77745,       1636]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.66550633122519*^9, 3.665506338800968*^9}}],

Cell[BoxData["\<\"/Users/poincare/Dropbox/Documentos/DMKM/02 \
Lyon/CMS/PR\"\>"], "Output",
 CellChangeTimes->{3.665506339564541*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\<exp2.xlsx\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"Length", "[", "exp", "]"}]}]], "Input",
 CellChangeTimes->{{3.665506341586244*^9, 3.665506366879055*^9}, 
   3.665507102937612*^9, {3.665509480107182*^9, 3.6655094823229017`*^9}}],

Cell[BoxData["1089"], "Output",
 CellChangeTimes->{3.665509483176444*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tally", "[", "exp", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{
      RowBox[{"Tally", "[", "exp", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "1089", " ", "Tries", " ", "in", " ", "a", " ", "9", "x9", " ", "size"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.665506368042225*^9, 3.665506378421424*^9}, {
  3.665506690216901*^9, 3.66550672061477*^9}, {3.665506752773644*^9, 
  3.665506802041403*^9}, {3.665507285037897*^9, 3.665507308530128*^9}, {
  3.6655087804114122`*^9, 3.665508803867815*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.48597994530537825`, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6789999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.544211485870556, 0.}, {1.455788514129444, 541.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.133729962573256`, 
           126.566885294027}, {-101.87964913332087`, 95.26352218621435}}],
         StatusArea[#, 541]& ,
         TagBoxNote->"541"],
        StyleBox["541", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[541, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.544211485870556, 0.}, {2.455788514129444, 547.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{135.760401361178, 
           236.19355669263172`}, {-104.06053458233603`, 95.26352218621435}}],
         StatusArea[#, 547]& ,
         TagBoxNote->"547"],
        StyleBox["547", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[547, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6789999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.544211485870556, 0.}, {3.455788514129444, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{245.38707275978277`, 345.82022809123646`}, {
           94.40004127804515, 95.26352218621435}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.48597994530537825`, 0.}, {3.5151846855059254`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.544211485870556, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.544211485870556, 0.}]}], 
         LineBox[{{3.455788514129444, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {3.455788514129444, 
            0.}]}], {{}, {}, {}, {
           LineBox[{{1.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.455788514129444, 
              0.}]}], LineBox[{{1.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.544211485870556, 
              0.}]}], LineBox[{{2.455788514129444, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.455788514129444, 
              0.}]}], LineBox[{{2.544211485870556, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.544211485870556, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks  wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites  wins\"\>", Offset[{0., -2.}, {2., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Tie  wins\"\>", Offset[{0., -2.}, {3., 0.}], {0, 1}, 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.48597994530537825`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks  wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites  wins\"", TraditionalForm], 0}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox["\"Tie  wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.665506371033051*^9, 3.665506378965507*^9}, 
   3.66550641375465*^9, {3.6655065729453783`*^9, 3.665506601929317*^9}, {
   3.6655066860747137`*^9, 3.665506720917572*^9}, {3.665506753243643*^9, 
   3.665506802526675*^9}, 3.665506845029008*^9, 3.665506931716157*^9, {
   3.665506964874015*^9, 3.665506979082341*^9}, 3.665507104204183*^9, 
   3.66550717646212*^9, {3.6655072815327873`*^9, 3.6655073088944597`*^9}, 
   3.665507365889553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"exp4", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Import", "[", "\"\<exp3.xlsx\>\"", "]"}], "]"}]}], ";", 
  RowBox[{"Length", "[", "exp4", "]"}]}]], "Input",
 CellChangeTimes->{{3.6655090042564087`*^9, 3.665509006485896*^9}, {
  3.665509488577097*^9, 3.6655094909203987`*^9}, {3.665509686790695*^9, 
  3.665509697002138*^9}}],

Cell[BoxData["570"], "Output",
 CellChangeTimes->{{3.665509491423113*^9, 3.6655095083869057`*^9}, {
   3.665509697597197*^9, 3.6655097103122787`*^9}, 3.665510171622854*^9, 
   3.665518431361672*^9, 3.6655188104948893`*^9, 3.6655619848034077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Tally", "[", "exp4", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"ChartLabels", "\[Rule]", 
     RowBox[{
      RowBox[{"Tally", "[", "exp4", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"19", "x19"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.665509013903846*^9, 3.665509015645623*^9}, {
  3.665509633484962*^9, 3.665509638851931*^9}, {3.66550969202107*^9, 
  3.665509694118886*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5064116575591986, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5446265938069217, 0.}, {1.4553734061930783`, 265.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.133729962573256`, 
           178.77219427556813`}, {-77.98524844875564, 95.26352218621432}}],
         StatusArea[#, 265]& ,
         TagBoxNote->"265"],
        StyleBox["265", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[265, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5446265938069217`, 0.}, {2.455373406193078, 305.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{193.18176377824162`, 
           345.82022809123646`}, {-104.060534582336, 95.26352218621432}}],
         StatusArea[#, 305]& ,
         TagBoxNote->"305"],
        StyleBox["305", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[305, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.5064116575591986, 0.}, {2.4943526411657557`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5446265938069217, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5446265938069217, 0.}]}],
          LineBox[{{2.455373406193078, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.455373406193078, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4553734061930783`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4553734061930783`, 
              0.}]}], LineBox[{{1.5446265938069217`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5446265938069217`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Blacks  wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Whites  wins\"\>", 
           Offset[{0., -2.}, {1.9999999999999998`, 0.}], {0, 1}, Automatic, {
           1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5064116575591986, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Blacks  wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Whites  wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.6655090174424257`*^9, 3.665509187874049*^9, 3.6655093663367357`*^9, 
   3.6655094710037403`*^9, 3.6655095092150908`*^9, {3.665509699061728*^9, 
   3.665509711682056*^9}, 3.6655101730778847`*^9, 3.665518432200453*^9, 
   3.665518811401883*^9, 3.6655619858323507`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"hist1", "=", 
   RowBox[{"Import", "[", "\"\<hist3.csv\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.665562173049046*^9, 3.665562195422871*^9}, 
   3.665562300463366*^9, {3.665564484455473*^9, 3.665564484628093*^9}, {
   3.665567331413556*^9, 3.665567331526819*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hist1", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"hist1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Mean", "[", 
   RowBox[{"hist1", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.665562301674921*^9, 3.665562323977044*^9}, {
  3.6655626016376266`*^9, 3.665562618973947*^9}, {3.665564485989583*^9, 
  3.665564486924382*^9}, {3.665564890956016*^9, 3.665564895255678*^9}}],

Cell[BoxData["2881.827561837456`"], "Output",
 CellChangeTimes->{{3.6655626146591187`*^9, 3.665562619658104*^9}, 
   3.6655631059369917`*^9, 3.665563500698254*^9, 3.66556358815171*^9, 
   3.665564487266374*^9, 3.665564749582944*^9, 3.665564895543001*^9, 
   3.665565292180602*^9, 3.665565736853921*^9, 3.665566697293372*^9, 
   3.6655667895102777`*^9, 3.6655673335472517`*^9, 3.66556903560569*^9, 
   3.665569399039043*^9, 3.665569532658485*^9, 3.665570218586836*^9, 
   3.665572200081949*^9, 3.665574601447055*^9, 3.665578475880809*^9}],

Cell[BoxData["2949.3257950530037`"], "Output",
 CellChangeTimes->{{3.6655626146591187`*^9, 3.665562619658104*^9}, 
   3.6655631059369917`*^9, 3.665563500698254*^9, 3.66556358815171*^9, 
   3.665564487266374*^9, 3.665564749582944*^9, 3.665564895543001*^9, 
   3.665565292180602*^9, 3.665565736853921*^9, 3.665566697293372*^9, 
   3.6655667895102777`*^9, 3.6655673335472517`*^9, 3.66556903560569*^9, 
   3.665569399039043*^9, 3.665569532658485*^9, 3.665570218586836*^9, 
   3.665572200081949*^9, 3.665574601447055*^9, 3.6655784758885927`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StudentTCI", "[", 
  RowBox[{
   RowBox[{"Mean", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"StandardDeviation", "[", 
    RowBox[{"hist1", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", "1"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665562465208153*^9, 3.665562528670368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1066.819357551461`", ",", "4617.209419426956`"}], "}"}]], "Output",\

 CellChangeTimes->{3.665562500712595*^9, 3.665562533751828*^9, 
  3.665562603711054*^9, 3.665563111976756*^9, 3.6655635032821207`*^9, 
  3.665563589944406*^9, 3.6655644895056467`*^9, 3.665564751777548*^9, 
  3.665566699400837*^9, 3.665567335573896*^9, 3.665569402723081*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocationTest", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665562655173931*^9, 3.665562661179215*^9}, {
  3.665562692013898*^9, 3.665562701698183*^9}, {3.665563148213397*^9, 
  3.665563191299259*^9}, {3.6655633645039997`*^9, 3.665563365334529*^9}, {
  3.665563522081296*^9, 3.665563526857325*^9}, {3.665565304428955*^9, 
  3.6655653225225554`*^9}, {3.6655654106352377`*^9, 3.665565430774765*^9}, {
  3.6655667291850224`*^9, 3.665566747942419*^9}, {3.665569517621872*^9, 
  3.665569521700224*^9}}],

Cell[BoxData["0.023540625868592395`"], "Output",
 CellChangeTimes->{
  3.665562661550383*^9, 3.665562702196252*^9, 3.665563117853347*^9, {
   3.665563150071553*^9, 3.665563191721943*^9}, 3.6655633659019117`*^9, {
   3.665563505799375*^9, 3.6655635276770687`*^9}, 3.665563590884326*^9, 
   3.665564490997011*^9, 3.665564752836919*^9, 3.665564868470006*^9, {
   3.665565296718285*^9, 3.665565322916039*^9}, {3.665565413844654*^9, 
   3.665565431376247*^9}, 3.665565739939114*^9, {3.665566702661648*^9, 
   3.665566748812598*^9}, 3.6655667932389593`*^9, 3.665567336655262*^9, 
   3.665569038629842*^9, 3.665569404863027*^9, {3.665569518710144*^9, 
   3.665569535996748*^9}, 3.66556959923076*^9, 3.665574605449296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Black Score\>\"", ",", "\"\<White Score\>\""}], "}"}], 
      ",", "Below"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6655628752866163`*^9, 3.6655628798427258`*^9}, {
  3.665563211434945*^9, 3.6655632224809103`*^9}, {3.665563383558653*^9, 
  3.665563413725334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
FEEIiU8G9x8xnHbsFuvUgWKIN75HodUuhsOCCzgNOIpB3st7IClCDD/69Iu3
SLwYQk1Fv8pdFsO3RBSF2FSLwSyxo/fbYTF83tH90EP9Yoi60N5Z8fsQPl5d
IzlpUQzfCOevhbUdwnLku9J69sUQQftS+3bEIcxnBPIF94uB/DwO0b58CNPE
+yizBBRD05D/LOmRQ3hzukP9fnwxvOEVYCr9LYqnj9Ki8dxiIIRE5+i1ieIP
D87o6NYWwyjph5+N4aK4vi1cL69rP36t9n3eS6I4j/HjKabRYki/dHL7gpQo
jrXiNHZfLIYnwxtGjzdEsG+mldnY32K4EWbEH9AsgtW33h8RpiyBb6XLCs9C
RHBx0rKMOUMJ1Oh9Vb57QQSLH2eR8+coAdal+iQLMRGc+F1RoVagBHRucxzW
XRHGrKHnlJbES4DwhoYM1wvjAEUPFSHZEthtO1tsGiCMST7HqZmploBdRkVQ
4Dlh7O5Vq+GHS6Bt3bNhVVgYL4mOadXol4BeVfzH2J9C+HrnLvphXAKPgi8E
+tUJ4REnwWOCliWQXRPT2f1CCJ9lO3bc9Mp+vJy6bNfzQrij5tqJ5/Yl4FFy
NiXkkBDWtvHVr75XAkkfGb7rzQliAkXWycX7JRA2Tejy8RXEh/PeGAo8LYHQ
dyfkvosK4hTj+TMmASVQn8m8FdAmgDk3aM/6RpQApcx/jI9vCuCQBGnTqvgS
EHZQtB+gEcAUYGS+kFoC19TMLyUV8eOHs3fP8+eVQN6rdDxvzo9XAiMsz5aV
QKYeZ1fLDh+2kyNY+dSWgKrp6beKWXx4fPCjdWVLCXwmGcg8bsKHzT03L893
lYDbeY0nv3d5cbcQ11W+gRJItOheMSngxcc61K8bj5YA22KKtpk1L652uHjj
2XQJSAiu9v6h58VHmR/bVSyWgAMrf+uxZh6cWZl86/taCQThsNOH3Hkwr3WT
A+/Ovp7U6o7x0jw4knTK0YiiFBwp6YJiZrgxdTb5vad0pfBlp1+aMZkbPzkt
9l85Wym8eRnyc8OSG2+s6Ll+4yuFYwIC4prs3PhOrL07j1gp3DpLkdvTz4Wn
tALvn5EpBRClTXkVwYUvTOU/9FYuhWAuYacIEy7c69/ziKBdCikv6yhfsXBh
PZlfXnMnSuGHV2l0+kdOTOxnesptVArp5RvrL2M5scJ9BZ/T50tB70FwsfVF
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
3nj59i/hka7A3URTg/lz+U/9Df8SUcWv76ww1uB/Fcoata82ibx6i25JzhrM
Gkx5Fa2zSTS9WhCz5a9BnhHBBIumDeLje5+H0aI16Kb67qm+1gbx4zPHSId0
DXK5GEZF1f8hyL4XKO4o1mDPi6h9Xqp/CK414omSZg3m9Q1Z6dasEwfJ+meu
6tRg286aDq/KOqG/1wFTjWpQrSNJ61DtGmHF/Tf+w4kaPHPUuWxOfY1wFgtf
pj1bgySi2zsGL1aJxwoiR8G2BhfcaU6F6a0SqURtjot9DXryspMsdK0QNcZH
SApu1KD/0rxblPkK0XVm7NyYy27+qlly1tQy8fXinUo2zxqkflJqbuyyTGzc
pGYw9t3FmlosuVTLBJNHor13cA2armSYDScuEWKBB5urImvw/kAPwz/FJUL7
aSvX97garB1N/iDZu0icSjW/I5BWg0YUw//dubFIOBbOd5nl1uBzvsW383sX
iYe13mLBJTXYtaU0l1L5m3jWyvqwqboG1S94rcZY/iaKe3OHV57X4JfPnqyD
VL+J1k+aigfaatCAjyT1reMvYmS2N9S2swb30oqBV88C8XvZbia6b1ff8tvu
l2oLBDXJH3g7XINahqPqj/N/Enz0ofE74zWY5u+x80LwJ6G0T3BZaW53vR6c
LzdJ+UEY768ycfxVg6XyLqFswj+IC3KGOalrNXhb7cT2SuE8cU9rdOfDvxq0
8mw726E5T4QZ3j5HR1mLHIezTl55/53IMqOo3L1k4/Z2Xm7O9e/Ef+fj6F1Z
a/GZQAynOcN34v11afsC7l0sdIjRsPIbMefW3DQmVIuq7VbuhjbfiG0/My52
yVq8u3FFcv/ebwR75JyzsVwtBsMqa97LOUIq2bPLW7UWraN/Jqd6zBE6+Uxi
1UQtGnWzS35UmyPOVmd5f9evxfrjf5zZNmeJmy1qwwJHazFzfljmQNMs4d/d
pXDarBaXKCj3TQbOEonD50ODLWvxlsdFDVqz3a07vTLddLEW238cFL0lMku8
WQyC1au16LBRnft1dYYY+8cbf8CpFtfZhkGtc4ZYpS1fsnWrRRHx7d9E5gxB
z6FvEuNdi+wvsoa7HswQwsLD2W8DanGgi1a6zmKGUJe9sbPzpBa7I8fVh9Rn
iOMapOeUY2ox5IIqDRXPDGFvEFPhmFSLV1p6G/i2pwlPU0n6tMxaLB68VbU5
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
         
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 8062.36793960043}, {0, 0.00047129287767852773`}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 8062.36793960043}, {0, 0.00047129287767852773`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Black Score\"", "\"White Score\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.665562880341054*^9, 3.665563120326542*^9, {3.665563212086795*^9, 
   3.665563223012986*^9}, {3.6655634052751703`*^9, 3.665563414230522*^9}, {
   3.665563509211783*^9, 3.665563529500269*^9}, 3.665563591954049*^9, 
   3.665564492924674*^9, 3.665564559468136*^9, 3.6655647549780397`*^9, 
   3.665564869567772*^9, {3.665565298179818*^9, 3.665565324865158*^9}, 
   3.665565435845295*^9, 3.66556574181474*^9, 3.665566707128437*^9, 
   3.665566755619482*^9, 3.66556679491858*^9, 3.665567337913616*^9, 
   3.665569040744939*^9, 3.665569407485174*^9, 3.665569600229148*^9, 
   3.665572203390582*^9, 3.665574608787005*^9, 3.665578478513338*^9, 
   3.665581108788823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{
     RowBox[{"Tally", "[", 
      RowBox[{"hist1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665563245845797*^9, 3.665563322199938*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5064116575591986, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6859999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5446265938069217, 0.}, {1.4553734061930783`, 727.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.13372996257327, 
           178.77219427556815`}, {-104.060534582336, 95.26352218621437}}],
         StatusArea[#, 727]& ,
         TagBoxNote->"727"],
        StyleBox["727", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[727, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6859999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5446265938069217`, 0.}, {2.455373406193078, 688.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{193.18176377824165`, 
           345.82022809123646`}, {-93.39459481070813, 95.26352218621437}}],
         StatusArea[#, 688]& ,
         TagBoxNote->"688"],
        StyleBox["688", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[688, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.5064116575591986, 0.}, {2.4943526411657557`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5446265938069217, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5446265938069217, 0.}]}],
          LineBox[{{2.455373406193078, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {2.455373406193078, 
            0.}]}], {{}, {}, {
           LineBox[{{1.4553734061930783`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4553734061930783`, 
              0.}]}], LineBox[{{1.5446265938069217`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5446265938069217`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Whites-wins\"\>", Offset[{0., -2.}, {1., 0.}], {0, 1},
            Automatic, {1, 0}], 
          InsetBox["\<\"Blacks-wins\"\>", 
           Offset[{0., -2.}, {1.9999999999999998`, 0.}], {0, 1}, Automatic, {
           1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5064116575591986, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1., 
       FormBox["\"Whites-wins\"", TraditionalForm], 0}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox["\"Blacks-wins\"", TraditionalForm], 0}}, {{1., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.665563275299705*^9, 3.66556332268801*^9}, {
   3.665563511379821*^9, 3.6655635315711393`*^9}, 3.665563595920815*^9, 
   3.665564495923967*^9, 3.66556455231074*^9, 3.6655647583207817`*^9, 
   3.665564871709229*^9, 3.665565327187001*^9, 3.665565443520411*^9, 
   3.665565748474498*^9, 3.665566711335067*^9, 3.665566757026071*^9, 
   3.665566799020998*^9, 3.6655673424539957`*^9, 3.665569052051095*^9, 
   3.665572206384946*^9, 3.665574611323799*^9, 3.665578484492663*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Tally", "[", 
     RowBox[{"hist1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Tally", "[", 
      RowBox[{"hist1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66556355148997*^9, 3.665563558479162*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5137809187279152`", ",", "0.4862190812720848`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6655635481111717`*^9, 3.6655635587100058`*^9}, 
   3.66556359973845*^9, 3.6655645439171753`*^9, 3.665565330532929*^9, 
   3.665565445952189*^9, 3.665565755985696*^9, 3.665566713575264*^9, 
   3.6655667588895283`*^9, 3.665566801251089*^9, 3.665567346852027*^9, 
   3.665569054233039*^9, 3.665572208673325*^9, 3.665574613883924*^9, 
   3.665578486793195*^9}]
}, Open  ]]
},
WindowSize->{783, 856},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 28, "Input"],
Cell[752, 27, 133, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[922, 34, 335, 7, 28, "Input"],
Cell[1260, 43, 73, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370, 49, 771, 20, 46, "Input"],
Cell[2144, 71, 7089, 178, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9270, 254, 365, 8, 28, "Input"],
Cell[9638, 264, 246, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9921, 272, 609, 17, 46, "Input"],
Cell[10533, 291, 5240, 135, 241, "Output"]
}, Open  ]],
Cell[15788, 429, 309, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[16122, 439, 688, 18, 63, "Input"],
Cell[16813, 459, 537, 7, 28, "Output"],
Cell[17353, 468, 540, 7, 28, "Output"]
}, Open  ]],
Cell[17908, 478, 83, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[18016, 483, 571, 17, 46, "Input"],
Cell[18590, 502, 384, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19011, 514, 784, 18, 28, "Input"],
Cell[19798, 534, 714, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20549, 549, 697, 19, 46, "Input"],
Cell[21249, 570, 48954, 854, 265, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70240, 1429, 613, 18, 46, "Input"],
Cell[70856, 1449, 5435, 137, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76328, 1591, 598, 18, 28, "Input"],
Cell[76929, 1611, 491, 9, 28, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
